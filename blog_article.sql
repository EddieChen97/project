-- phpMyAdmin SQL Dump
-- version 4.7.9
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: 2019-02-18 09:27:45
-- 服务器版本： 5.7.21
-- PHP Version: 5.6.35

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `cbwwdndg`
--

-- --------------------------------------------------------

--
-- 表的结构 `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
CREATE TABLE IF NOT EXISTS `blog_article` (
  `id` int(4) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '博文编号',
  `order` int(4) UNSIGNED NOT NULL COMMENT '排序',
  `title` varchar(50) NOT NULL COMMENT '博文标题',
  `content` text NOT NULL COMMENT '博文内容',
  `recommend` int(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '是否推荐 1推荐 0不推荐',
  `title_url` varchar(20) NOT NULL COMMENT '博文地址',
  `cat_id` int(4) UNSIGNED NOT NULL COMMENT '分类ID',
  `create_time` int(10) UNSIGNED NOT NULL COMMENT '创建时间',
  `update_time` int(10) UNSIGNED NOT NULL COMMENT '最后更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `blog_article`
--

INSERT INTO `blog_article` (`id`, `order`, `title`, `content`, `recommend`, `title_url`, `cat_id`, `create_time`, `update_time`) VALUES
(1, 1, '常量：固定不变的值', '                                                                            <p>1&nbsp;系统常量</p><p>&nbsp; &nbsp; PHP_OS //操作系统信息&nbsp;</p><p>&nbsp; &nbsp; PHP_VERSION //PHP版本信息&nbsp;</p><p>&nbsp; &nbsp; PHP_SAPI php //运行方式<br></p><p>&nbsp;2&nbsp;自定义常量\r\n</p><p>&nbsp; &nbsp;&nbsp;<span style=\"background-color: rgb(248, 248, 248); font-family: Menlo, Monaco, Consolas, \" courier=\"\" new\",=\"\" monospace;=\"\" font-size:=\"\" inherit;=\"\" white-space:=\"\" pre-wrap;\"=\"\">$a=3;//自定义常量</span></p><p>	&nbsp;&nbsp;&nbsp;格式：define(\"常量名称\",\"常量的值\");\r\n</p><p>	&nbsp;&nbsp;&nbsp;常量名称全大写\r\n</p><p>	&nbsp;&nbsp;&nbsp;用法：网页上固定不变的内容；\r\n</p><p>&nbsp; &nbsp;&nbsp;</p><p><br></p>                                                ', 1, '?cat=1&id=1', 1, 1530253341, 1530284849),
(2, 2, 'COOKIE', '                                            <p>1》创建cookie\r\n</p><p>	setcookie (cookie名称，cookie的值，cookie的失效时间，cookie在服务器的有效路径，cookie有效的域名，0|1[cookie是否仅通过安全的https，值为0或1])\r\n</p><p>   setcookie(\"TMCookie\"$value,time()+3600,\"/mr/\",\".mrbccd.com\",1);\r\n</p><p>   //设置有效时间为60秒，有效目录为\"/mr/\",有效域名为mrbccd.com及其所有子域名\r\n</p><p>   2》删除cookie\r\n</p><p>	1.应用setcookie()函数删除cookie\r\n</p><p>	将第二个参数设置为空值，将过期时间设置为小于系统时间即可\r\n</p><p>	setcookie(\"TMCookie\",\"\",time()-1)\r\n</p><p>	2.使用浏览器手动删除cookie\r\n</p><p>	例子：</p><p><br></p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\"><span class=\"hljs-meta\"><?php</span>\r\n		header(<span class=\"hljs-string\">\"content-type:text/html;charset=gbk\"</span>);\r\n		date_default_timezone_set(<span class=\"hljs-string\">\'PRC\'</span>);\r\n    		<span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>($_COOKIE[<span class=\"hljs-string\">\"php_cookie\"</span>])){\r\n        		setcookie(<span class=\"hljs-string\">\"php_cookie\"</span>,date(<span class=\"hljs-string\">\"Y-m-d H:i:s\"</span>));\r\n        		<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"欢迎您第一次访问本网站！\"</span>.<span class=\"hljs-string\">\"<br />\"</span>;\r\n    		}<span class=\"hljs-keyword\">else</span>{\r\n        		setcookie(<span class=\"hljs-string\">\"php_cookie\"</span>,date(<span class=\"hljs-string\">\"Y-m-d H:i:s\"</span>),time()+<span class=\"hljs-number\">60</span>);\r\n        		<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"您上次访问本网站的时间为：\"</span>.$_COOKIE[<span class=\"hljs-string\">\"php_cookie\"</span>];\r\n        		<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"<br />\"</span>;\r\n  		  }\r\n        		<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"您本次访问网站的时间为：\"</span>.date(<span class=\"hljs-string\">\"Y-m-d H:i:s\"</span>);\r\n    		\r\n		<span class=\"hljs-meta\">?></span></code></pre><p><br></p>                        ', 1, '?cat=1&id=2', 1, 1530279297, 1530281484),
(3, 3, 'SESSION管理', '                            <p>Session：会话，记录用户信息\r\n</p><p>   1》启动会话\r\n</p><p>	1.应用session_start()函数\r\n</p><p>	   session_start();\r\n</p><p>	   注意：使用session_start()函数之前浏览器不能有任何输出，否则会发生错误。\r\n</p><p>	2.应用session_register()函数\r\n</p><p>	   session_register()用来为会话登录一个变量来隐含地启动会话，但要求设置php.ini文件的选项，将register_globals指令设置为on，然后重新启动apache服务器。\r\n</p><p>   2》注册会话\r\n</p><p>	会话变量被启动后，全部保存在数组$_SESSION中。通过数组$_SESSION创建一个会话变量很容易，只要直接给该数组添加一个元素即可。\r\n</p><p>	session_start();     //启动Session\r\n</p><p>	$_SESSION[\"admin\"]=null;    //声明一个名为admin的变量，并赋空值。\r\n</p><p>   3》使用会话\r\n</p><p>	首先需要判断会话变量是否有一个会话ID存在，如果不存在，就创建一个，并且使其能够通过全局数组$_SESSION进行访问。如果已经存在，则将这个已注册的会话变量载入以供用户使用。\r\n</p><p>	if(!empty($_SESSION[\'session_name\'])){  //判断用于存储用户名的Session会话变量是否为空\r\n</p><p>	   $myvalue=$_SESSION[\'session_name\'];  //将会话变量赋给一个变量$myvalue\r\n</p><p>		}\r\n</p><p>		empty()函数：用来测试变量是否已经配置。若变量已存在、非空字符串或者非零，则返回false；反之返回true。\r\n</p><p>   4》删除会话\r\n</p><p>	1.删除单个会话      使用unset()函数直接注销$_SESSION数组中的某个元素即可\r\n</p><p>		unset($SESSION[\'user\']);//注销$SESSION[\'user\']变量\r\n</p><p>	注意：应用unset()函数时，要注意$_SESSION数组中的某元素不能省略，即不能一次注销整个数组，这样会禁止整个会话的功能。例如unset($_SESSION)函数会将全局变量$_SESSION销毁，且没有办法恢复，用户也不能再注册$_SESSION变量。\r\n</p><p>	2.删除多个会话\r\n</p><p>		如果要一次注销所有的会话变量，可以将一个空的数组赋值给$_SESSION\r\n</p><p>		$_SESSION=array();\r\n</p><p>	3.结束当前的会话\r\n</p><p>		如果整个会话已结束，首先应该注销所有的会话变量，然后使用session_destroy()函数清除结束当前会话，并清空会话中的所有资源，彻底销毁Session\r\n</p><p>		session_destroy();</p><p><br></p>            ', 1, '?cat=1&id=3', 1, 1530279377, 1530281459),
(4, 4, '常用函数', '                                            <p>gettype(变量);//获取变量的类型\r\n</p><p>settype(变量,类型);//设置变量的类型\r\n</p><p>isset();//判断一个变量是否存在\r\n</p><p>unset();//销毁一个变量\r\n</p><p>empty();//检查一个变量是否为空(\"\"、0、NULL、FALSE、array()、var $var)\r\n</p><p>is_int();//检查一个变量是否为整型\r\n</p><p>is_float();//检查一个变量是否为浮点型\r\n</p><p>is_double();//检查一个变量是否为双精度型\r\n</p><p>is_string();//检查一个变量是否为字符串型\r\n</p><p>is_numeric();//检查一个变量是否为数字（包括浮点数）或数字字符串\r\n</p><p>is_array();//检查一个变量是否为数组\r\n</p><p>rand(int $a,int $b);产生一个在$a与$b之间的随机整数\r\n</p><p>mt_rand(int $a,int $b);和rand()的功能是一样的，但mt_rand比rand速度快\r\n</p><p>getrandmax(无参数);获取rand可能得到的最大随机数\r\n</p><p>mt_getrandmax(无参数);获取mt_rand可能得到的最大随机数</p><p>*重点*\r\n</p><p>number_format(float number,int [参数2],string [参数3],string [参数4]);格式化数字字符串,number是要格式化的数值，参数2是保留的小数位数，参数3是设置小数点符号，默认为\".\"，参数4是设置分隔符，默认为美国形式\",\"。\r\n</p><p>例：$i=12345.6789;\r\n</p><p>    $b=number_format($i,2);\r\n</p><p>    $c=number_format($i,2,\'#\',\'*\');\r\n</p><p>    echo $b;//结果为123,45.67\r\n</p><p>    echo $c;//结果为123*45#67\r\n</p><p>*重点*\r\n</p><p>intval();//临时强制转换为int型   \r\n</p><p>floatval();//临时强制转换为float型\r\n</p><p>strval();//临时强制转换为string型\r\n</p><p>例：    $sum=22.22;\r\n</p><p>	echo intval($sum);//将intval($sum)整体临时转换为了int型，而$sum仍为浮点型\r\n</p><p>	echo gettype($sum);\r\n</p><p>	输出结果为22double\r\n</p><p>$_POST\r\n</p><p>$_GET\r\n</p><p>数学函数\r\n</p><p>	abs() 绝对值\r\n</p><p>	floor()舍去法取整\r\n</p><p>	ceil()进一法取整\r\n</p><p>	round(参数1,[参数2])四舍五入    //参数1表示要处理的数字，参数2表示保留几位小数,省略参数2则默认为不保留小数\r\n</p><p>	min()求最小值或数组中最小值\r\n</p><p>	max()求最大值或数组中最大值</p><p><br></p>                        ', 1, '?cat=1&id=4', 1, 1530279408, 1530281465),
(5, 5, '数组', '                                                                                            <p>1》索引数组：下标为数字的数组\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2》关联数组：下标为自定义键值的数组\r\n</p><p>	创建索引数组：\r\n</p><p>		1.array(\'asdf\',\'dfdf\',\'gfgf\');\r\n</p><p>		2.range()自动创建数组\r\n</p><p>		例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$numbers1=range(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">10</span>); ==<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>);\r\n\r\n$numbers2=range(a,z);  ==<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'a\'</span>,<span class=\"hljs-string\">\'b\'</span>,<span class=\"hljs-string\">\'c\'</span>,<span class=\"hljs-string\">\'d\'</span>,<span class=\"hljs-string\">\'e\'</span>,<span class=\"hljs-string\">\'f\'</span>,<span class=\"hljs-string\">\'g\'</span>.....,<span class=\"hljs-string\">\'x\'</span>,<span class=\"hljs-string\">\'y\'</span>,<span class=\"hljs-string\">\'z\'</span>);</code></pre><p>			$number3=range(1,10,参数3);参数3是步长值\r\n</p><p>		count()//计算数组元素个数\r\n</p><p>	创建关联数组：\r\n</p><p>		1.array(\'baidu\'=&gt;\'李彦宏\',\'360\'=&gt;\'周鸿祎\');\r\n</p><p>		2.$userName[\'陈球\']=19;//不用array关键字也能创建数组\r\n</p><p>	使用foreach遍历数组\r\n</p><p>	例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$userNames=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'张三\'</span>,<span class=\"hljs-string\">\'李四\'</span>,<span class=\"hljs-string\">\'王五\'</span>);\r\n\r\n<span class=\"hljs-keyword\">foreach</span>($userName <span class=\"hljs-keyword\">as</span> $key =&gt; $value)<span class=\"hljs-comment\">//$key是下标    $value是值</span>\r\n\r\n{\r\n\r\n<span class=\"hljs-keyword\">echo</span> $key.<span class=\"hljs-string\">\"----\"</span>.$value.<span class=\"hljs-string\">\"\"</span>;    \r\n\r\n}</code></pre><p>		//结果：0----张三\r\n</p><p>			1----李四\r\n</p><p>			2----王五\r\n</p><p>	增加数组元素\r\n</p><p>	例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$userAges=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'陈球\'</span>=&gt;<span class=\"hljs-number\">20</span>);\r\n\r\n<span class=\"hljs-comment\">//增加两个元素</span>\r\n\r\n$userAges[<span class=\"hljs-string\">\'王楠\'</span>]=<span class=\"hljs-number\">21</span>；\r\n\r\n$userAges[<span class=\"hljs-string\">\'韩佳奇\'</span>]=<span class=\"hljs-number\">20</span>;\r\n\r\n<span class=\"hljs-keyword\">foreach</span>($userAges <span class=\"hljs-keyword\">as</span> $key =&gt; $value)\r\n\r\n{\r\n\r\n<span class=\"hljs-keyword\">echo</span> $key.<span class=\"hljs-string\">\"----\"</span>.$value.<span class=\"hljs-string\">\"\"</span>;\r\n\r\n}</code></pre><p>		//结果：陈球----20\r\n</p><p>			王楠----21\r\n</p><p>			韩佳奇----20\r\n</p><p>	*难点*\r\n</p><p>	each();//获得当前数组里的第一个数据，然后打包成一个全新的数组，完成后数组内部指针向前移动一位\r\n</p><p>	例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$userName=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'陈球\'</span>=&gt;<span class=\"hljs-string\">\'20\'</span>,<span class=\"hljs-string\">\'王楠\'</span>=&gt;<span class=\"hljs-string\">\'21\'</span>);\r\n\r\n$a=each($userName);\r\n\r\nprint_r($a);\r\n\r\n<span class=\"hljs-comment\">//结果：[0]=&gt;陈球,[1]=&gt;20,[key]=&gt;陈球,[value]=&gt;20</span></code></pre><p>	*难点*\r\n</p><p>	list();//将数组里的值分别赋给变量（list只能识别数字下标）\r\n</p><p>	例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$a=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'aaa\'</span>,<span class=\"hljs-string\">\'bbb\'</span>,<span class=\"hljs-string\">\'ccc\'</span>,<span class=\"hljs-string\">\'ddd\'</span>);\r\n\r\n<span class=\"hljs-keyword\">list</span>($var1,$var2,$var3,$var4)=$a;\r\n\r\n<span class=\"hljs-keyword\">echo</span> $var1;<span class=\"hljs-comment\">//结果为aaa</span></code></pre><p>	用list将each返回的两个值分开\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$userAge=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'陈球\'</span>=&gt;<span class=\"hljs-number\">20</span>);\r\n\r\n<span class=\"hljs-keyword\">list</span>($name,$age)=each($userAge);<span class=\"hljs-comment\">//list只能识别数字下标,所以each返回的数组里面只识别0和1,不识别key和value </span>\r\n\r\n<span class=\"hljs-keyword\">echo</span> $name.$age;<span class=\"hljs-comment\">//结果：陈球20</span></code></pre><p>	array_unique();//把要处理的数组里的数据拿出来创建一个新数组，移除新数组中重复的值，旧数组原封不动\r\n</p><p>	例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"javascript hljs\" codemark=\"1\">$userAge=array(<span class=\"hljs-string\">\'陈球\'</span>=&gt;<span class=\"hljs-string\">\'20\'</span>,<span class=\"hljs-string\">\'王楠\'</span>=&gt;<span class=\"hljs-string\">\'21\'</span>,<span class=\"hljs-string\">\'韩佳奇\'</span>=&gt;<span class=\"hljs-string\">\'20\'</span>);\r\n		$a = array_unique($userAge);\r\n		print_r($a);<span class=\"hljs-comment\">//结果：[陈球]=&gt;20,[王楠]=&gt;21,[韩佳奇]=&gt;</span></code></pre><p>	array_flip();//把要处理的数组里的数据拿出来创建一个新数组，交换新数组中的键和值，旧数组原封不动\r\n</p><p>	in_array(参数1,参数2);//检查数组中是否存在某个值，参数1是要查找的值，参数2是被查找的数组\r\n</p><p>	二维数组的声明\r\n</p><p>		$products=array(\r\n</p><p>			array(),//逗号隔开\r\n</p><p>			array(),\r\n</p><p>			array()\r\n</p><p>		)\r\n</p><p>	二维数组的访问\r\n</p><p>		1.二维索引数组&nbsp;&nbsp;&nbsp;$userName[0][1]\r\n</p><p>		2.二维关联数组&nbsp;&nbsp;&nbsp;$userName[\'a\'][\'b\']\r\n</p><p>		用循环访问二维索引数组：\r\n</p><p>		例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$products=<span class=\"hljs-keyword\">array</span>(\r\n				<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>),\r\n				<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>),\r\n				<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>)\r\n			);\r\n			<span class=\"hljs-keyword\">for</span>($i=<span class=\"hljs-number\">0</span>;$i<count($products);$i++) {=\"\" <span=\"\" class=\"hljs-keyword\">for($j=<span class=\"hljs-number\">0</span>;$j<count($products[$i]);$j++) {=\"\" <span=\"\" class=\"hljs-keyword\">echo $products[$i][$j].<span class=\"hljs-string\">\",\"</span>;\r\n				}\r\n			}</count($products[$i]);$j++)></count($products);$i++)></code></pre><p>		用循环访问二维关联数组：\r\n</p><p>		例：\r\n</p><p>			$products=array\r\n</p><p>			(\r\n</p><p>				array(\'产品名\'=&gt;\'苹果\',\'数量\'=&gt;6,\'价格\'=&gt;28.8),\r\n</p><p>				array(\'产品名\'=&gt;\'猪肉\',\'数量\'=&gt;2,\'价格\'=&gt;32.1),\r\n</p><p>				array(\'产品名\'=&gt;\'饼干\',\'数量\'=&gt;3,\'价格\'=&gt;45.3)\r\n</p><p>			)；\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\"><span class=\"hljs-comment\">                       //方法1</span>\r\n			<span class=\"hljs-keyword\">for</span>($i=<span class=\"hljs-number\">0</span>;$i<count($products);$i++) {=\"\" <span=\"\" class=\"hljs-keyword\">foreach($products[i] <span class=\"hljs-keyword\">as</span> $key =&gt; $value)\r\n				{\r\n					<span class=\"hljs-keyword\">echo</span> $key.<span class=\"hljs-string\">\"--\"</span>.$value.<span class=\"hljs-string\">\"|\"</span>;\r\n				}\r\n				<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"<br>\"</span>;\r\n			}\r\n			<span class=\"hljs-comment\">//方法2</span>\r\n			<span class=\"hljs-keyword\">for</span>($i=<span class=\"hljs-number\">0</span>;$i<count(products);$i++) {=\"\" <span=\"\" class=\"hljs-keyword\">while(!!<span class=\"hljs-keyword\">list</span>($key,$value)=each($products[$i]))\r\n				{\r\n					<span class=\"hljs-keyword\">echo</span> $key.<span class=\"hljs-string\">\"--\"</span>.$value.<span class=\"hljs-string\">\"|\"</span>;\r\n				}\r\n				<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"<br>\"</span>;\r\n			}</count(products);$i++)></count($products);$i++)></code></pre><p>	数组的排序\r\n</p><p>		sort();//把数组元素按照升序排列（数组元素是数字，字母，中文都可以）,会改变元素的键值（下标）\r\n</p><p>		例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$fruit=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'banana\'</span>,<span class=\"hljs-string\">\'orange\'</span>,<span class=\"hljs-string\">\'apple\'</span>);\r\n\r\n<span class=\"hljs-comment\">//原始数组为0--banana  1--orange  2--apple</span>\r\n\r\nsort($fruit);\r\n\r\nprint_r($fruit);\r\n\r\n<span class=\"hljs-comment\">//排序后数组为0--apple 1--banana 2--orange</span>\r\n\r\nasort();<span class=\"hljs-comment\">//把数组元素保留键值后按照升序排列</span></code></pre><p>		例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$fruit=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'banana\'</span>,<span class=\"hljs-string\">\'orange\'</span>,<span class=\"hljs-string\">\'apple\'</span>);\r\n\r\n<span class=\"hljs-comment\">//原始数组为0--banana  1--orange  2--apple</span>\r\n\r\nasort($fruit);\r\n\r\nprint_r($fruit);\r\n\r\n<span class=\"hljs-comment\">//排序后数组为2--apple 0--banana 1--orange</span></code></pre><p>		ksort();//按照键名把数组元素升序排列(多用于关联数组)\r\n</p><p>		rsort();//反向排序&nbsp;&nbsp;&nbsp;（降序）\r\n</p><p>		arsort();在asort的基础上反过来排序\r\n</p><p>		krsort();在ksort的基础上反过来排序\r\n</p><p>		shuffle();//随机打乱数组元素\r\n</p><p>		array_reverse();//创建一个新数组后对新数组进行反向排序数组&nbsp;&nbsp;\r\n</p><p>		注意：由array_开头的函数一般都是（有些不是）新创建一个数组，然后改动新数组的元素，旧数组原封不动\r\n</p><p>		array_unshift(数组变量，要插入的内容);在数组开头插入一个或多个元素（不创建新数组）	\r\n</p><p>		array_push(数组变量，要插入的内容);在数组末尾插入一个或多个元素\r\n</p><p>		array_shift(数组变量);//删除数组的第一个元素\r\n</p><p>		array_pop(数组变量);删除数组最后一个元素\r\n</p><p>		array_rand(数组变量,参数2);随机获取数组中的键(下标)，参数2表明获取几个键（创建新数组）\r\n</p><p>	数组的指针\r\n</p><p>		current(数组变量);//获取数组内部指针当前指向的元素\r\n</p><p>		next(数组变量);//将数组内部指针向前移动一位\r\n</p><p>		reset(数组变量);//将数组的内部指针指向第一个单元\r\n</p><p>		prev(数组变量);//将数组的内部指针往回移动一位	\r\n</p><p>		array_count_values();//统计数组中所有的值出现的次数\r\n</p><p>		例：</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$a=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">56</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">1</span>);\r\n\r\n    print_r(array_count_values($a));</code></pre><p>		*重点*\r\n</p><p>		extract(数组变量);//通过标量函数将字符串的所有键（下标）设置（声明）成了变量，然后将值赋给这个变量\r\n</p><p>		例：\r\n</p><pre style=\"max-width: 100%;\"><code class=\"php hljs\" codemark=\"1\">$fruits=<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\'a\'</span>=&gt;<span class=\"hljs-string\">\'apple\'</span>,<span class=\"hljs-string\">\'b\'</span>=&gt;<span class=\"hljs-string\">\'banana\'</span>,<span class=\"hljs-string\">\'c\'</span>=&gt;<span class=\"hljs-string\">\'orange\'</span>);\r\n\r\nextract($fruits);\r\n\r\n<span class=\"hljs-keyword\">echo</span> $a;<span class=\"hljs-comment\">//结果：apple</span></code></pre><p>		注意：在这个例子中，$a未提前声明就使用了，会有警告，解决办法是提前初始化一下$a,$b,$c。</p><p><br></p>                                                            ', 1, '?cat=1&id=5', 1, 1530279460, 1530341994),
(6, 6, '目录与文件', '                            <p>c://basic/demo1.php      c://basic/为目录        demo1.php为文件名     \r\n</p><p>	一、目录操作\r\n</p><p>		basename();//返回路径的文件名部分\r\n</p><p>		dirname();//返回路径的目录部分\r\n</p><p>		pathinfo();//此函数创建一个关联数组，其中包括：目录名、基本名和扩展名\r\n</p><p>		realpath(变量1);//将变量1里的路径转换为绝对路径\r\n</p><p>		is_dir();判断给定的路径是否是一个目录\r\n</p><p>		mkdir(参数1,0777);创建目录，参数1是要创建的目录路径，0777是固定格式，代表可能的最大访问权，如果没有此目录，则自动创建\r\n</p><p>	二、磁盘目录和文件计算\r\n</p><p>		filesize();// 返回指定文件字节大小（返回的是字节数）\r\n</p><p>		disk_free_space();//返回指定的目录所在磁盘分区的可用空间（返回的是字节数）\r\n</p><p>		disk_total_space();//返回指定的目录所在磁盘分区的总容量（返回的是字节数）\r\n</p><p>		fileatime();//返回文件的最后访问时间，采用的unix时间戳格式\r\n</p><p>		例：	$path=\"c:\\Appserv\\www\\Basic2\\Demo2.php\";\r\n</p><p>			echo date(\'Y-m-d H:i:s\',fileatime($path));\r\n</p><p>		filectime();//返回文件的最后改变时间(改变文件的所有者或权限)，采用的unix时间戳格式\r\n</p><p>		filemtime();//返回文件的最后修改时间（修改文件内容），采用的unix时间戳格式\r\n</p><p>		date_default_timezone_set(\'Asia/Shanghai\');//设置时区为亚洲/上海(中国时间比国际标准时区快了8个小时)\r\n</p><p>		date(参数1，[参数2]);//格式化一个本地时间/日期，参数1表示时间格式Y-m-d H:i:s ，参数2可以放时间戳，将时间戳转化为标准时间，不放时间戳的话默认为系统当前时间\r\n</p><p>	三、文件处理\r\n</p><p>		fopen(参数1，参数2);//打开一个文件，参数1是文件路径，参数2是打开的模式(a,a+,r,w..),fopen返回的是资源类型resource,我们一般称它为句柄，或者叫资源句柄\r\n</p><p>		fclose();关闭一个已打开的文件\r\n</p><p>		fwrite(参数1，参数2，[参数3]);//向文件写入数据，参数1是一个文件资源，参数2是要写入的内容，参数3是限制写入的长度\r\n</p><p>		例:	$fp=fopen(\'c:\\tmp\\text.txt\',a);\r\n</p><p>			$outstring=\"This is chen!\";	\r\n</p><p>			fwrite($fp,$outstring,strlen($outstring));\r\n</p><p>		file_put_contents(参数1，参数2);向文件里写入内容，此函数不需要资源句柄，参数1表示文件路径，参数2表示要写入的内容\r\n</p><p>		fgetc();读出一个字符，并将指针移到下一个字符。\r\n</p><p>		fgets(参数1，[参数2]);读出一行字符，可以指定一行显示的长度，参数1是文件资源，参数2是设置返回长度的，最多返回【参数2】-1个字符。\r\n</p><p>		fgetss();从文件指针中读取一行并过滤掉html标记\r\n</p><p>		fread(参数1，参数2);读取定量的字符，参数1是文件资源，参数2是设置返回字符的长度的\r\n</p><p>		fpassthru();输出文件指针处的所有剩余数据，此函数本身包含了向浏览器输出的功能，所以不需要echo，fpassthru返回的是剩余的总长度\r\n</p><p>		file(参数1);将整个文件读入数组中，以行分组，参数1是文件路径\r\n</p><p>		readfile();将整个文件读出来，readfile本身能够直接输出浏览器，所以不需要echo，返回值是文件字节的总长度\r\n</p><p>		file_get_contents(参数1);可以读入数据到缓冲区，然后通过echo来打印到浏览器上显示\r\n</p><p>		feof(参数1);测试文件指针是否到了文件结束的位置，参数1是文件资源，此函数可以和fgetc()配合使用，做到读出文件中所有内容\r\n</p><p>		例:	$fp = fopen(\'file.txt\',\'r\');\r\n</p><p>			while(!feof($fp))\r\n</p><p>			{\r\n</p><p>				echo fgetc($fp);\r\n</p><p>			}\r\n</p><p>			fclose($fp);\r\n</p><p>		file_exists();检查文件或目录是否存在\r\n</p><p>		filesize();查看一个文件的大小(返回的是文件大小的字节数)\r\n</p><p>		unlink();删除一个文件\r\n</p><p>		rewind();将文件指针复位到文件的开始\r\n</p><p>		ftell();返回文件指针的位置\r\n</p><p>		fseek();定位文件指针到指定位置\r\n</p><p>		例：	$fp=fopen(\'file.txt\',\'r\');;\r\n</p><p>			fseek=($fp,20);//将文件指针定位到第二十个字符的位置\r\n</p><p>			fclose($fp);\r\n</p><p>		flock();文件锁定，详细介绍请查php手册\r\n</p><p>		opendir();打开路径指定的目录流\r\n</p><p>		closedir();关闭目录流\r\n</p><p>		readdir();返回目录中的各个元素(每执行一次指针往前移动一位)\r\n</p><p>		例子：\r\n</p><p>			$dir=opendir(\'c:\\appserv\\www\\basic\');\r\n</p><p>			while(!!$file = readdir($dir))\r\n</p><p>			{\r\n</p><p>				echo $file.\'<br />\';\r\n</p><p>			}\r\n</p><p>			closedir($dir);\r\n</p><p>		scandir();将目录读入数组(不需要打开和关闭)\r\n</p><p>		rmdir();删除指定的目录(只能删除目录，不能用来删除文件，不需要打开和关闭)\r\n</p><p>		rename(参数1，参数2);重命名文件，参数1是旧文件名，参数2是新文件名，可以用于目录和文件(不需要打开和关闭)</p><p><br></p>            ', 1, '?cat=1&id=6', 1, 1530279537, 1530281478),
(7, 7, 'php用户自定义函数', '                            <p>1.标准函数\r\n</p><p>		md5(\'123456\');//字符串加密函数\r\n</p><p>		sha1(\'123456\');//字符串加密函数\r\n</p><p>	2.自定义函数\r\n</p><p>		创建函数   //函数名命名规则和变量一样\r\n</p><p>		function functionName()\r\n</p><p>		{\r\n</p><p>			echo \"这是一个无参无返回自定义函数\";\r\n</p><p>		}\r\n</p><p>		调用函数\r\n</p><p>		functionName();\r\n</p><p>		可以给有参数的函数加默认值：\r\n</p><p>		function functionName($result=10)//当result没有被传参时，它的默认值为10\r\n</p><p>		{\r\n</p><p>			echo $result;\r\n</p><p>		}\r\n</p><p>		在函数里面可以用追加的方式赋值给数组：\r\n</p><p>		function functionName($name,$age,$job)\r\n</p><p>		{\r\n</p><p>			$userInfo[]=$name;  //这种写法比较常用\r\n</p><p>			$userInfo[]=$age;\r\n</p><p>			$userInfo[]=$job;	\r\n</p><p>		}\r\n</p><p>		引用传参：\r\n</p><p>		$prices=50;\r\n</p><p>		$tax=0.5;\r\n</p><p>		function functionPrices(&$prices,$tax)\r\n</p><p>		{\r\n</p><p>			$prices = $prices + $prices * $tax;\r\n</p><p>			$tax = $tax * $tax;\r\n</p><p>			echo $prices;//75\r\n</p><p>			echo $tax;//0.25\r\n</p><p>		}\r\n</p><p>		functionPrices($prices,$tax);\r\n</p><p>		echo $prices;//按引用传参，改变了外面变量的值，得到75\r\n</p><p>		echo $tax;//按值传参，外面的变量值没有被改变，得到0.5\r\n</p><p>		设置全局变量：（不常用）\r\n</p><p>		$a = 5;\r\n</p><p>		function fa()\r\n</p><p>		{\r\n</p><p>			global $a;//将$a设置成为全局变量\r\n</p><p>			$a = 2;\r\n</p><p>		}\r\n</p><p>		fa();\r\n</p><p>		echo $a;//结果为2，如果不将$a设置为全局变量则$a = 5;\r\n</p><p>		设置超级全局变量：(是个数组)\r\n</p><p>		$GLOBALS[\'a\'] = 5;\r\n</p><p>		function fa()\r\n</p><p>		{\r\n</p><p>			$GLOBALS[\'a\']=2;\r\n</p><p>		}\r\n</p><p>		fa();\r\n</p><p>		echo $GLOBALS[\'a\'];//值为2\r\n</p><p>		创建自己的函数库:通常将函数集文件存放在library文件夹里，然后通过文件调用即可。文件名约定俗成可以取名为tool.library.php，tool可以根据情况来设定，后面两个照抄！</p><p><br></p>            ', 1, '?cat=1&id=7', 1, 1530279604, 1530281520),
(8, 8, '文件包含', '                            <p>include \'library/tool.library.php\';引号里可以是任何php文件，可以多次包含同一个文件\r\n</p><p>		echo functionPi();\r\n</p><p>		include_once\'library/tool.library.php\';先验证是否包含该文件，如果包含了则不再执行include_once\r\n</p><p>		require();和include在很大程度上是一样的\r\n</p><p>		require_once();和include_once在很大程度上是一样的\r\n</p><p></p><p>  include和require的区别在于，当要包含的文件不存在时，如果使用的是include包含的话，会出现两个警告，然后继续执行下面的代码，如果是require包含的话，则直接报错，停止执行下面的内容，所以一般是使用require包含文件的\r\n</p><p><br></p>            ', 1, '?cat=1&id=8', 1, 1530279638, 1530281527),
(9, 9, '魔法常量 -- 这里的常量说白了就是一个值而已', '                            <p>__FILE__:返回当前文件的路径及文件名\r\n</p><p>	所以，一般包含文件的时候，建议采用__FILE__，这样速度更快\r\n</p><p>	例：当前文件为demo12，要包含demo1时\r\n</p><p>		require(dirname(__FILE__).\'\\demo1.php\');//dirname取得目录，去掉文件名\r\n</p><p>	__LINE__：返回当前代码的行号\r\n</p><p>	__FUNCTION__:返回当前函数名\r\n</p><p>	__CLASS__:返回当前类名\r\n</p><p>	__METHOD__:返回当前方法名</p><p><br></p>            ', 1, '?cat=1&id=9', 1, 1530279662, 1530281535),
(10, 10, '字符串处理', '                                            <p>1.字符串格式化\r\n</p><p>	ltrim();//清理字符串起始处多余空白\r\n</p><p>	rtrim();//清理字符串后面多余的空白\r\n</p><p>	trim();//清理字符串两边多余的空白\r\n</p><p>	chop();//清理字符串后面多余的空白，rtrim的别名，这个不太常用\r\n</p><p>	nl2br();//将字符串里的换行符（\\n）换为<br >,使得网页和文本上都能换行\r\n</br ></p><p>	htmlentities();//将所有字符串转换为html\r\n</p><p>	htmlspecialchars();//将特殊字符转换为html\r\n</p><p>	strip_tags();//去除字符串中的html标记，只保留文本\r\n</p><p>	addslashes();//将所有特殊字符（双引号，单引号，反斜杠和null字符）转换为为转义字符\r\n</p><p>	stripslashes();//将转义过的字符变为原本的字符，和addslashes搭配使用\r\n</p><p>	strtoupper();//将字符串转换为大写\r\n</p><p>	strtolower();//将字符串转换为小写\r\n</p><p>	ucfirst();//将字符串的第一个字母转换为大写\r\n</p><p>	ucwords();//将字符串每个单词第一个字母转换为大写（以空格隔开的单词）\r\n</p><p>	str_pad(参数1，参数2，[参数3]，[参数4]);//将字符串用指定个数的字符填充字符串，参数1是要处理的字符串变量，参数2是指定填充的总数量（要算上原字符的数量），参数3是要填充的字符，参数4是填充方向，填充方向有三个：1.在原字符串右边填充STR_PAD_RIGHT&nbsp;2.在原字符串左边填充STR_PAD_LEFT&nbsp;3.在原字符串的两边填充STR_PAD_BOTH\r\n</p><p>	2.操作子字符串\r\n</p><p>	explode(参数1，参数2);//将参数2里的字符串以参数1的符号分割开，返回的是一个数组\r\n</p><p>	implode(参数1,参数2);//将参数2数组里的内容用参数1的符号连接起来\r\n</p><p>	strtok(参数1，参数2);//将参数1数组里的内容用参数2的符号分割开来，每次取出一个，第二次及之后引用不写参数1，参数2可以是多个符号\r\n</p><p>	例：\r\n</p><p>		$str&nbsp;=&nbsp;\"I,will.be#back!\";\r\n</p><p>		$tok=strtok($str,\',.#\');\r\n</p><p>		while($tok)\r\n</p><p>		{\r\n</p><p>			echo&nbsp;$tok.\'<br >\';\r\n</br ></p><p>			$tok&nbsp;=&nbsp;strtok(\',.#\');\r\n</p><p>		}//结果：I\r\n</p><p>			&nbsp;will\r\n</p><p>			&nbsp;be\r\n</p><p>			&nbsp;back!\r\n</p><p>	substr(参数1，参数2，参数3);//取出部分字符串，参数1是要处理的字符串，参数2是从哪个位置开始（起始值是0），参数3是要取的字符串个数\r\n</p><p>	str_split();//把字符串分解成一个字母一个字母的，返回值是数组\r\n</p><p>	strrev();//逆置字符串，将字符串反过来\r\n</p><p>	3.字符串比较\r\n</p><p>	strcmp(字符串1，字符串2);当字符串1等于字符串2时，返回0，当字符串1大于字符串2时，返回正数，当字符串1小于字符串2时，返回负数，此函数区分大小写，例如，B和b不相等，另外此函数是按非自然排序的，例如strcmp(\'2\',\'10\')，返回的会是一个正数\r\n</p><p>	strcasecmp(字符串1，字符串2);//此字符串与strcmp是一样的，但此函数不区分大小写，B和b是相等的\r\n</p><p>	strnatcmp();//此函数是按自然排序的，其他功能和strcmp一样\r\n</p><p>	strnatcasecmp();//不区分大小写\r\n</p><p>	strspn();//返回一个字符串中包含有另一个字符串中字符的第一部分的长度。也就是求两个字符串之间相同的部分\r\n</p><p>	strlen();//测试字符串的长度\r\n</p><p>	substr_count(参数1，参数2);//测试参数2里的字符串在参数1字符串里出现的频率\r\n</p><p>	4.查找替换字符串\r\n</p><p>	strstr(参数1,参数2);//在参数1里的字符串里从参数2的位置开始输出之后的字符串\r\n</p><p>	stristr();//功能和strstr一样，但是这个是不区分大小写的\r\n</p><p>	strchr();//str的别名\r\n</p><p>	strpos(参数1，参数2);//返回参数2在参数1里第一次出现的位置（起始值为0）\r\n</p><p>	strrpos(参数1，参数2);//返回参数2在参数1里最后出现的位置\r\n</p><p>	str_replace(参数1，参数2，参数3);//把参数3里的所有参数1字符串替换为参数2字符串\r\n</p><p>	str_ireplace(参数1，参数2，参数3);//不区分大小写\r\n</p><p>	substr_replace(参数1，参数2，参数3,参数4);//在参数1的字符串中，把从第【参数3】个位置开始，取出【参数4】个来，替换成【参数2】\r\n</p><p>	5.处理中文字符\r\n</p><p>	mb_strlen(参数1，[参数2]);//获取参数1字符串的长度，参数2是字符编码，如果不设置就和strlen没有区别\r\n</p><p>	例：$str&nbsp;=&nbsp;\'我是传奇\';//对于中文来说是四个字符\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;//用普通的strlen获取长度，一个中文字等于两个字符\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strlen($str);//结果为8\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;//使用mb_strlen来获取长度，设置第二个参数字符编码\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;mb_strlen($str,\'GBK\');//结果为4\r\n</p><p>	mb_substr(参数1，参数2，参数3,参数4);//取出部分字符串，参数1是要处理的字符串，参数2是从哪个位置开始（起始值是0），参数3是要取的字符串个数，参数4是字符编码\r\n</p><p></p><p>&nbsp;mb_strpos(参数1，参数2[，参数3[,参数4]]);//返回参数2在参数1里第一次出现的位置，参数3是从哪个位置开始计算，本来默认就是0的，所以一般填0，因为参数4的特殊性，所以才多出这个参数，参数4是字符编码\r\n</p><p><br></p>                        ', 1, '?cat=1&id=10', 1, 1530279699, 1530358715),
(11, 11, '正则表达式', '                            <p>1.语法\r\n</p><p>	模式规则：/php/   在字符串前后加上两条斜杠即可\r\n</p><p>	匹配函数：preg_match(参数1，参数2)函数在字符串（参数2）中搜索模式（参数1，表示匹配模式，模式也就是和字符串去比较、匹配），如果存在则返回true，否则返回false，此函数返回值为int\r\n</p><p>	例： preg_match(\'/php/\',\'php\');//结果为1\r\n</p><p>	     preg_match(\'/php/\',\'asp\');//结果为0\r\n</p><p>	注意：匹配就是一个字符一个字符的进行比较，并且只要模式全部通过，那么就匹配成功，匹配和相等是两个概念\r\n</p><p>	例：echo preg_match(\'/php/\',\'phpasdfasdfasdf\');//结果为1\r\n</p><p>	    echo preg_match(\'/php/\',\'sdfgsdfphpasdfasdfasdf\');//结果为1\r\n</p><p>	因为目前的模式是一个整体的php，所以只要包含php就匹配成功，要php连在一起的，不能拆开\r\n</p><p>	2.正则表达式中的元素\r\n</p><p>	+：至少包含一个前导字符\r\n</p><p>	例：echo preg_match(\'/ph+p/\',\'phhhhhhhp\');结果为1\r\n</p><p>	前导字符就是h\r\n</p><p>	h+的意思是，至少包含一个h\r\n</p><p>	*：至少包含0个或多个前导字符\r\n</p><p>	例：echo preg_match(\'/p*p/\',\'php\');结果为1\r\n</p><p>	    echo preg_match(\'/p*p/\',\'pp\');结果为1\r\n</p><p>	    echo preg_match(\'/ph*p/\',\'phhhhhhhp\');结果为1\r\n</p><p>	？：至少包含0个或1个前导字符\r\n</p><p>	例：echo preg_match(\'/ph?p/\',\'php\');结果为1\r\n</p><p>	    echo preg_match(\'/ph?p/\',\'pp\');结果为1\r\n</p><p>	.:表示任意一个字符\r\n</p><p>	例：echo preg_match(\'/p.p/\',\'php\');结果为1\r\n</p><p>	    echo preg_match(\'/p.p/\',\'pyp\');结果为1\r\n</p><p>	.*:表示前导任意字符，并且0个或者多个\r\n</p><p>	例：echo preg_match(\'/p.*p/\',\'pp\');结果为1\r\n</p><p>	    echo preg_match(\'/p.*p/\',\'pasdasdasdp\');结果为1\r\n</p><p>	{x}:表示匹配任何包含x个前导字符串\r\n</p><p>	例：echo preg_match(\'/ph{3}p/\',\'phhhp\');结果为1\r\n</p><p>	{x,y}:表示匹配任何包含x到y个前导字符串\r\n</p><p>	例：echo preg_match(\'/ph{3,5}p/\',\'phhhp\');结果为1\r\n</p><p>	    echo preg_match(\'/ph{3,5}p/\',\'phhhhp\');结果为1\r\n</p><p>	    echo preg_match(\'/ph{3,5}p/\',\'phhp\');结果为0\r\n</p><p>	{x,}:表示匹配任何包含至少x个前导字符串\r\n</p><p>	echo preg_match(\'/ph{3,}p/\',\'phhhhp\');结果为1\r\n</p><p>	echo preg_match(\'/ph{3,}p/\',\'phhhhhhhhp\');结果为1\r\n</p><p>	$:匹配字符串的行尾\r\n</p><p>	echo preg_match(\'/php$/\',\'asdfphpasdf\');结果为0\r\n</p><p>	echo preg_match(\'/php$/\',\'asdfphpasdfphp\');结果为1\r\n</p><p>	^:匹配字符串的行首\r\n</p><p>	echo preg_match(\'/^php/\',\'asdfphpasdf\');结果为0\r\n</p><p>	echo preg_match(\'/^php/\',\'phpasdfphpasdf\');结果为0\r\n</p><p>	注意：当^和$一起用的时候，基本不要用正则表达式了，直接用==号即可\r\n</p><p>	例：	echo preg_match(\'/^php$/\', \'php\');结果为1\r\n</p><p>		echo preg_match(\'/^php$/\', \'phpasdfphp\');结果为0\r\n</p><p>	|：匹配字符串的左边或右边\r\n</p><p>	echo preg_match(\'/php|asp/\',\'php\');结果为1\r\n</p><p>	echo preg_match(\'/php|asp/\',\'asp\');结果为1\r\n</p><p>	():包围一个字符分组或定义个反引用(其实就是分组)，可以使用\\1\\2提取（后面有ubb实例理解）\r\n</p><p>	元字符\r\n</p><p>	[]:表示匹配[]中的任意一个字符都可以\r\n</p><p>	echo preg_match(\'/[abc]/\',\'a\');结果为1\r\n</p><p>	echo preg_match(\'/[abc]/\',\'b\');结果为1\r\n</p><p>	[a-z]:表示匹配小写字母a到z中任意一个\r\n</p><p>	echo preg_match(\'/[a-z]/\',\'aasdfasgsdfgsedf\');结果为1\r\n</p><p>	[A-Z]:表示匹配小写字母A到Z中任意一个\r\n</p><p>	echo preg_match(\'/[A-z]/\',\'AasFASDfgsedf\');结果为1\r\n</p><p>	[0-9]:表示匹配数字0-9中任意一个\r\n</p><p>	echo preg_match(\'/[0-9]/\', \'asd3213\');结果为1\r\n</p><p>	[a-zA-Z0-9]:表示匹配一个大写小字母或写字母或数字\r\n</p><p>	[^x]:表示陪陪任何不包含x的字符串\r\n</p><p>	echo preg_match(\'/[^abc]/\', \'a\');结果为0\r\n</p><p>	echo preg_match(\'/[^abc]/\', \'d\');结果为1\r\n</p><p>	\\w或[\\w]:代表[a-zA-Z0-9]\r\n</p><p>	\\W：功能正好和\\w相反，代表除了[a-zA-Z0-9]以外的字符串\r\n</p><p>	\\d:匹配任何数字字符，和[0-9]相同\r\n</p><p>	\\D:匹配任何非数字字符和[^0-9]\r\n</p><p>	\\s:匹配任何空白字符\r\n</p><p>	\\S:匹配任何非空白字符\r\n</p><p>	\\b:检查是否到达单词边界\r\n</p><p>	echo preg_match(\'/php\\b/\', \'php\');结果为1\r\n</p><p>	echo preg_match(\'/php\\b/\', \'phpasdf\');结果为0\r\n</p><p>	echo preg_match(\'/php\\b/\', \'php is good！\');结果为1\r\n</p><p>	\\B:检查是否没有到达单词边界\r\n</p><p>	\\:匹配正则里的特殊字符\r\n</p><p>	echo preg_match(\'/ph\\+p/\', \'ph+p\');结果为1，因为+是正则里的特殊字符，如果要匹配特殊字符的话必须加上\\\r\n</p><p>	修饰符\r\n</p><p>	修饰符一般放在//的外面\r\n</p><p>	i:表示不区分大小写\r\n</p><p>	echo preg_match(\'/php/\', \'PHP\');结果为0\r\n</p><p>	echo preg_match(\'/php/i\', \'PHP\');结果为1\r\n</p><p>	m:表示匹配首尾的时候，如果遇到换行，也应该承认是结尾\r\n</p><p>	echo preg_match(\'/php$/\', \'This is php,\\nis good\');结果为0\r\n</p><p>	echo preg_match(\'/php$/m\', \"This is php,\\nis good\");结果为1\r\n</p><p>	x:表示忽略掉规则模式中的空白字符\r\n</p><p>	echo preg_match(\'/ph p/\', \'php\');结果为0\r\n</p><p>	echo preg_match(\'/ph p/x\', \'php\');结果为1\r\n</p><p>	A:表示强制从头开始匹配，跟^是一样的\r\n</p><p>	U：禁止贪婪匹配，只跟踪到最近的一个匹配字符并结束（后面有ubb实例理解）\r\n</p><p>	prel风格函数\r\n</p><p>	preg_grep(参数1，参数2);//搜索数组中的与模式相匹配的字符串，并返回，返回值是数组，参数1是匹配模式，参数2是要搜索的数组\r\n</p><p>	preg_match(参数1，参数2);在参数2字符串里搜索与参数1模式相匹配的字符串，返回的是布尔值\r\n</p><p>	preg_match_all(参数1，参数2,参数3);在参数2字符串里搜索与参数1模式相匹配的字符串（全局搜索），然后存到参数3的数组变量里\r\n</p><p>	preg_match_all(\'/php[1-6]/\',\'php5asdfaphp6asdfasdffphp4\',$out);\r\n</p><p>	print_r($out);\r\n</p><p>	输出：array\r\n</p><p>		(\r\n</p><p>			[0]=>array\r\n</p><p>				(\r\n</p><p>					[0]=>php5\r\n</p><p>					[1]=>php6\r\n</p><p>					[2]=>php4\r\n</p><p>				)	\r\n</p><p>		)\r\n</p><p>	preg_quote();定界特殊的正则表达式，在每个对于正则表达式语法而言有特殊含义的字符前插入一个反斜线。包括：$^*()+={}[]|\\\\:<>。(一般是用作插入数据库时)\r\n</p><p>	echo preg_quote(\'php is $150\');\r\n</p><p>	结果：php is \\$150\r\n</p><p>	preg_replace(参数1，参数2，参数3);搜索匹配的结果，然后替换掉。参数1是正则的模式，参数2是要替换的字符串，参数3是要被替换的字符串\r\n</p><p>	echo preg_replace(\'/php[1-6]/\',\'python\',\'This is a php5,This is a php4\');\r\n</p><p>	结果：This is a python,this is python\r\n</p><p>	ubb案例实例：（了解()的用法和禁止贪婪的用法）\r\n</p><p>	$mode = \'/(\\[b\\])(.*)(\\[\\/b\\])/U\';\r\n</p><p>	$replace = \'<strong>\\2</strong>\';\r\n</p><p>	$string = \'This a [b]php5[/b],This a [b]php4[/b]\';\r\n</p><p>	echo preg_replace($mode,$replace,$string);\r\n</p><p>	目标：将[b][/b]替换成<strong></strong>([b][/b]是ubb代码，加粗的意思)\r\n</p><p>	注意：\r\n</p><p>		1.这个时候的[]是字符中的括号，而不是语法中的[a-z]的意思\r\n</p><p>		2.‘.’表示匹配任意一个字符，加上一个*号表示匹配零个或多个\r\n</p><p>		3.用括号分为三组，那么第一组就是\\1,第二组就是\\2，第三组就是\\3\r\n</p><p>	问题：第一个[b]和最后一个[/b]匹配了（贪婪问题）\r\n</p><p>	解决：禁止贪婪，用修饰符U\r\n</p><p>	preg_split(参数1，参数2);按参数1的模式分割参数2的字符串,返回值是数组类型\r\n</p><p>	print_r(preg_split(\'/@/\',\'1134596694@qq.com\'));\r\n</p><p>	结果：[0]=>1134596694 [1]=>qq.com\r\n</p><p>	print_r(preg_split(\'/[.@]/\',\'1134596694@qq.com\'));\r\n</p><p>	结果：[0]=>1134596694 [1]=>qq [2]=>com\r\n</p><p>	print_r(preg_split(\'/[.@o]/\',\'1134596694@qq.com\'));\r\n</p><p>	结果：[0]=>1134596694 [1]=>qq [2]=>c [3]=>m</p><p><br></p>            ', 1, '?cat=1&id=11', 1, 1530279750, 1530281549),
(12, 12, '日期和时间', '                            <p>checkdate(month,day,year);验证时间是否合法，返回布尔值  例：checkdate(3,23,2018); 返回1\r\n</p><p>	date(参数1，[参数2]);格式化时间，参数1是设置时间的格式YmdHis,参数2是时间戳，如果传了参数2的话会把参数2的时间戳转换为参数1格式的时间\r\n</p><p>	gettimeofday();返回一个关联数组，数组里面有四个元素，第一个元素sec是存放的当前时间的时间戳，此函数可以不要参数，也可以传入一个1,让此函数直接返回当前时间的时间戳\r\n</p><p>	getdate();返回一个关联数组，如果不给时间戳参数，存放的是当前时间的年、月、日、时间戳等信息，如果给了时间戳参数，则里面存放的是时间戳参数对应的时间信息\r\n</p><p>	time();获取当前时间戳，可以和date配合使用，例：date(\'Y-m-d H:i:s\',time()-60);\r\n</p><p>	mktime(H,i,s,m,d,Y);获取指定时间的时间戳\r\n</p><p>	echo mktime(12,35,24,5,12,2018);//获得2018-5-12 12:35:24的时间戳\r\n</p><p>	strtotime();将时间转换为时间戳\r\n</p><p>	例：strtotime(\'2018-3-21 16:43:21\');//获取这个日期的时间戳\r\n</p><p>	特殊用法:strtotime(\'-1 day\');//获取一天前的现在的时间戳\r\n</p><p>	getlastmod();获取当前文件的修改时间戳\r\n</p><p>--------------\r\n</p><p>	设置时区和GMT/UTC\r\n</p><p>	date_dafault_timezone_get();获取当前时区\r\n</p><p>	date_dafault_timezone_set(\'PRC\');设置默认时区，PRC也可以是Asia/Shanghai或Asia/Chongqing或Asia/Hong_Kong\r\n</p><p>--------------\r\n</p><p>	microtime();返回时间戳和微秒数</p><p><br></p>            ', 1, '?cat=1&id=12', 1, 1530279778, 1530281562),
(13, 13, '表单的接收及验证', '                            <p>header(\'Location:http://www.baidu.com\');重新导向一个url(跳转到百度首页)\r\n</p><p>	注意：在执行header()函数时，之前不能有任何浏览器输出，所以一般header一般放在最上面\r\n</p><p>	1.使用$_GET或$_POST接收数据\r\n</p><p>	$_GET\r\n</p><p>	$_POST\r\n</p><p>	使用isset时，要注意，空字符串也是数据，也可以赋值给以上两个超级全局变量\r\n</p><p>	当用户在文本框输入html代码时，浏览器也会解析，所以为了页面安全，要使用htmlspecialchars()过滤html特殊字符:\r\n</p><p>	$userName = $_POST[\'username\'];\r\n</p><p>	htmlspecialchars($userName);\r\n</p><p>	echo $userName;\r\n</p><p>	2.对数据有效性进行验证\r\n</p><p>	a.使用trim()取出数据的前后空格\r\n</p><p>	b.使用函数strlen()判断数据的长度\r\n</p><p>	c.使用函数is_numeric()判断数据是纯数字\r\n</p><p>	d.使用正则表达式验证邮箱是否合法\r\n</p><p>	实例：	1.验证提交页面是否正确\r\n</p><p>		2.接收所有数据，包括过滤html、消除空格\r\n</p><p></p><p>  3.验证数据\r\n</p><p><br></p>            ', 1, '?cat=1&id=13', 1, 1530279807, 1530281570),
(14, 14, '上传文件', '                            <p>1.php上传配置（php.ini）\r\n</p><p>	（1）file_uploads=on|off:确定服务器上的php脚本是否可以接受文件上传\r\n</p><p>	（2）max_execution_time=int:php脚本在注册一个致命错误之前可以执行的最长时间，以秒为单位\r\n</p><p>	（3）memory_limit=int:设置脚本可以分配到的最大内存，以MB为单位。这可以防止失控的脚本独占服务器内存\r\n</p><p>	（4）upload_max_filesize=int:设置上传文件最大大小，以MB为单位。此指令必须小于post_max_size。\r\n</p><p>	（5）upload_tmp_dir=string:设置上传文件再处理之前必须存放在服务器的临时一个位置，直到文件移动到最终目的地为止\r\n</p><p>	（6）post_max_size=int:确定通过POST方法可以接受的信息的最大大小，以MB为单位\r\n</p><p>	2.$_FILE数组\r\n</p><p>	上传表单的html代码\r\n</p><p>	<form enctype=\"multipart/form-data\" action=\"upload.php\" method=\"post\">\r\n</p><p>		<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>\r\n</p><p>		上传文件：<input type=\"file\" name=\"userfile\"/>\r\n</p><p>		<input type=\"submit\" value=\"上传\"/>\r\n</p><p>	</form>\r\n</p><p>	enctype=\"multipart/form-data\"，这里是固定写法，否则文件上传失败\r\n</p><p>	<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>，这是一个隐藏于，定义了文件上传的大小上限，超过这个值时，上传失败。它必须定义在文件上传域的前面，而且这里定义的值不能超过在php.ini文件中upload_max_filesize设置的值，否则没有意义了（注意：MAX_FILE_SIZE的值知识对浏览器的一个建议，实际上它可以被简单的绕过。因此不要把对浏览器的限制寄希望于该值。实际上php.ini设置中的上传文件最大值是不会失效的。但是最好还是在表单中加上MAX_FILE_SIZE，因为它可以避免用户在花时间等待上传大文件之后才发现该文件太大了的麻烦。）\r\n</p><p>	$_FILES超级全局变量，它存储各种与上传有关的信息，这些信息对于通过php脚本上传到服务器的文件至关重要。\r\n</p><p>	1.存储在$_FILES[\'userfile\'][\'tmp_name\']变量中的值就是文件在web服务器中临时存储的位置。\r\n</p><p>	2.存储在$_FILES[\'userfile\'][\'name\']变量中的值就是用户系统中的文件名称\r\n</p><p>	3.存储在$_FILES[\'userfile\'][\'size\']变量中的值就是文件的字节大小\r\n</p><p>	4.存储在$_FILES[\'userfile\'][\'type\']变量中的值就是文件的MIME类型（就是文件类型），例如：text/plain或image/gif。\r\n</p><p>	5.存储在$_FILES[\'userfile\'][\'erreo\']变量中的值就是任何与文件上载相关的错误代码，error分别提供了一些数组常量：0表示没有发生错误，1表示上载文件的大小超出了约定值。文件大小的最大值是php配置文件中指定的，该指令是upload_max_filesize。2表示上载文件大小超出了html表单中的MAX_FILE_SIZE元素所指定的最大值。3表示文件只被部分上载。4表示没有上载任何文件\r\n</p><p>	3.php上传函数\r\n</p><p>	is_uploaded_file();判断文件是否是通过HTTP POST上传的，返回值是布尔型\r\n</p><p>	通过HTTP POST上传后，文件会存放在临时文件夹下\r\n</p><p>	move_uploaded_file(参数1，参数2);将上传的文件移动到新位置，参数1是临时文件路径，参数2是要存放的路径，此函数值返回值是布尔值，如果移动失败，会返回false</p><p><br></p>            ', 1, '?cat=1&id=14', 1, 1530279868, 1530281577),
(15, 15, '处理图像', '                            <p>1.创建图像（一般生成的图像可以是PNG,JPG,GIF,WBMP类型的）\r\n</p><p>	创建图像的一般流程：\r\n</p><p>	（1）设定标头，告诉浏览器你要生成的MIME类型\r\n</p><p>	（2）创建一个图像区域，以后的操作都将基于此图像区域\r\n</p><p>	（3）在空白图像区域绘制填充背景\r\n</p><p>	（4）在背景上绘制图形轮廓输入文本\r\n</p><p>	（5）输出最终图形\r\n</p><p>	（6）清楚所有资源\r\n</p><p>	（7）其他页面调用图像\r\n</p><p>	第一步，设置文件MIME类型：\r\n</p><p>	header(\'content-type:image/png\');\r\n</p><p>	第二步，创建一个图形区域（新建一个真彩色图像）\r\n</p><p>		$im = imagecreatetruecolor(200宽，200高);\r\n</p><p>	第三步，在空白图像区域，绘制背景颜色\r\n</p><p>	$red = imagecolorallocate($im,255,0,0);为一幅图像分配颜色，这里设置的是红色\r\n</p><p>	imagefill($im,x,y,$blue);区域填充，x，y表示的是从哪里开始填充，x轴，y轴坐标\r\n</p><p>	第四步，在蓝色的背景上输入一些线条文字等\r\n</p><p>	$white = imagecolorallocate($im,255,255,255);\r\n</p><p>	//imageline($im,0,0,200,200,$white);画一条线段，x轴0-200，y轴0-200\r\n</p><p>	//imagestring($im,2,x,y,\'welcome\',$white);水平的画一行字符串，2代表字体，有1,2,3,4,5几种字体选择\r\n</p><p>	第五步，输出最终图形\r\n</p><p>	imagepng($im);\r\n</p><p>	第六步，清除所有资源\r\n</p><p>	imagedestroy($im);\r\n</p><p>	在其他页面调用此图片\r\n</p><p>	<img src=\"demo1.php\" alt=\"php创建的图片\"/>\r\n</p><p>	加载已有图像\r\n</p><p>	imagecreatefrompng(参数1);从png文件或url新建一图像，用这种方式加载图像，是可以利用image函数编辑图像的，例如加水印，参数1是图片的路径\r\n</p><p>	加载已有的系统字体\r\n</p><p>	imagettftext(参数1，参数2,参数3，参数4，参数5，参数6，参数7,参数8);用指定路径的字体，向图像写入文本，参数1是图像资源，如$im，参数2是字体大小，参数3是字体倾斜角度，参数4是x轴位置，参数5是y轴位置，参数6是字体颜色，参数7是字体路径，参数8是要插入的文字\r\n</p><p>	注意：如果插入的文本里面放的是中文的话会出现乱码，此时需要用iconv()函数解决\r\n</p><p>	iconv(参数1，参数2，参数3);将参数3的字符串从参数1的编码转换为参数2的编码\r\n</p><p>	图像微缩\r\n</p><p>	getimagesize(参数1);//取得图像大小，返回一个数组，存放图片的信息，宽高类型等，参数1是图像路径\r\n</p><p>	imagecopyresampled(参数1，参数2，参数3,参数4，参数5,参数6，参数7,参数8，参数9，参数10);重新采样拷贝部分图像并调整大小，参数1是新图的图像资源，参数2是原图的图像资源，参数3、参数4是新图的坐标，参数5、6是原图的坐标、参数7、8是新图的宽高，参数9、10是原图的宽高\r\n</p><p>	例：\r\n</p><p>	//将文件的目录做成一个常量\r\n</p><p>	define(\'__DIR__\',dirname(__FILE__).\'\\\\\');\r\n</p><p>	//获取原图的宽高\r\n</p><p>	list($width,$height) = getimagesize(__DIR__.\'222.png\');\r\n</p><p>	//将原图缩放成%40\r\n</p><p>	$_width = $width*0.4;\r\n</p><p>	$_height = $height*0.4;\r\n</p><p>	//创建一个新图\r\n</p><p>	$_im = imagecreatetruecolor($_width,$_height);\r\n</p><p>	//载入原图\r\n</p><p>	$im = imagecreatefrompng(__DIR__.\'222.png\');\r\n</p><p>	//将原图重新采样，拷贝到新图上\r\n</p><p>	iamgecopyresampled($_im,$im,0,0,0,0,$_width,$_height,$width,$height);\r\n</p><p>	//将新图输出\r\n</p><p>	imagepng($_im);\r\n</p><p>	//销毁图像资源\r\n</p><p>	imagedestroy($im);\r\n</p><p>	imagedestroy($_im);</p><p><br></p>            ', 1, '?cat=1&id=15', 1, 1530279899, 1530281584),
(16, 1, '数据类型', '            <p>1.整型：\r\n</p><p>	tinyint&nbsp;&nbsp;1字节&nbsp;&nbsp;范围：有符号&nbsp;-128----127&nbsp;无符号0----255\r\n</p><p>	smallint&nbsp;2字节&nbsp;&nbsp;范围：有符号-32768----32767&nbsp;&nbsp;无符号&nbsp;0----65535\r\n</p><p>	int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4字节&nbsp;&nbsp;范围：有符号：-2147483648----2147483647&nbsp;无符号&nbsp;0----4294967295\r\n</p><p>	bigint&nbsp;8字节\r\n</p><p>&nbsp;&nbsp;2.bool型\r\n</p><p>	bool==》tinyint&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p><p>	float&nbsp;4字节&nbsp;（会丢失精度）\r\n</p><p>	double&nbsp;4字节（会丢失精度）\r\n</p><p>	decima[m,d]&nbsp;精度小数&nbsp;&nbsp;m：总位数&nbsp;&nbsp;d：小数点后边的位数\r\n</p><p>&nbsp;&nbsp;4.字符串\r\n</p><p>	char（位数）定长字符&nbsp;255\r\n</p><p>	varchar（位数）变长字符&nbsp;255\r\n</p><p>	text&nbsp;65535个字符\r\n</p><p>	mediumblob&nbsp;2的24次方个字符\r\n</p><p>	enum（val1，val2，val3......）列枚举：enum（\"男\",\"女\"）\r\n</p><p>&nbsp;&nbsp;5.日期时间\r\n</p><p>	date&nbsp;日期\r\n</p><p>	time&nbsp;时间\r\n</p><p>	datetime&nbsp;日期时间\r\n</p><p>				create&nbsp;table&nbsp;stu(\r\n</p><p>					id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>					stuNum&nbsp;varchar(10),\r\n</p><p>					stuName&nbsp;varchar(20),\r\n</p><p>					stuSex&nbsp;enum(\"1\",\"2\"),\r\n</p><p>					stuAge&nbsp;tinyint(2),\r\n</p><p>					stuTel&nbsp;varchar(20)</p><p><br></p>', 1, '?cat=2&id=16', 2, 1530281685, 1530281685),
(17, 2, 'sql命令DDL（结构化操作）', '            <p>1.添加表字段\r\n</p><p>		alter&nbsp;table&nbsp;表名称&nbsp;add&nbsp;列定义\r\n</p><p>		alter&nbsp;table&nbsp;stu&nbsp;add&nbsp;email&nbsp;varchar（200）；\r\n</p><p>	2.修改表字段\r\n</p><p>		alter&nbsp;table&nbsp;表名称&nbsp;change&nbsp;旧字段名称&nbsp;新字段定义\r\n</p><p>		alter&nbsp;table&nbsp;stu&nbsp;change&nbsp;email&nbsp;stuEmail&nbsp;varchar（150）；\r\n</p><p>	3.删除表字段\r\n</p><p>		alter&nbsp;table&nbsp;表名称&nbsp;drop&nbsp;字段\r\n</p><p>		alter&nbsp;table&nbsp;stu&nbsp;drop&nbsp;stuEmail；\r\n</p><p>	4.修改表名称\r\n</p><p>		alter&nbsp;table&nbsp;表名&nbsp;rename&nbsp;新名字\r\n</p><p>		alter&nbsp;table&nbsp;stu&nbsp;rename&nbsp;student；\r\n</p><p>	5.删除表\r\n</p><p>		drop&nbsp;table&nbsp;表名称\r\n</p><p>		drop&nbsp;table&nbsp;stu；</p><p><br></p>', 1, '?cat=2&id=17', 2, 1530281711, 1530281711),
(18, 3, 'sql命令DML操作（增删改查）', '            <p>1.增\r\n</p><p>		insert&nbsp;into&nbsp;表名称（字段1，字段2，字段3，......）values(val1,val2,val3,.....)\r\n</p><p>		insert&nbsp;into&nbsp;student(stuNum,stuName,stuAge,stuSex,stuTel)values(\"0001\",\"zhangsan\",18,\"1\",\"15945616354\");\r\n</p><p>		插入中文会出乱码问题解决方案\r\n</p><p>		解决方法1：set&nbsp;names&nbsp;gbk;//指DBMS系统字符集中文字符集&nbsp;&nbsp;&nbsp;******只是临时（本次客户端）解决，下次打开客户端可能还是乱码*****\r\n</p><p>		解决方法2：show&nbsp;variables;&nbsp;查看mysql系统变量的。\r\n</p><p>			&nbsp;&nbsp;&nbsp;show&nbsp;variables&nbsp;like&nbsp;\"%character%\";//查找的关于字符集的系统变量\r\n</p><p>			运行&nbsp;show&nbsp;variables&nbsp;like&nbsp;\"%character%\";\r\n</p><p>			得到\r\n</p><p>			Variable_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			+--------------------------+----------------------------------+\r\n</p><p>			|&nbsp;character_set_client&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_connection&nbsp;|&nbsp;gbk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_database&nbsp;&nbsp;&nbsp;|&nbsp;utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_filesystem&nbsp;|&nbsp;binary&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_results&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_server&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_set_system&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n</p><p>			|&nbsp;character_sets_dir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;F:\\AppServ\\MySQL\\share\\charsets\\\r\n</p><p>			如上述数据全为utf8则不会出现中文乱码\r\n</p><p>			此处应该修改character_set_connection为utf8\r\n</p><p>			修改语句：setcharacter_set_connection&nbsp;=&nbsp;utf8;\r\n</p><p>	2.查看\r\n</p><p>		select&nbsp;*from&nbsp;表名称\r\n</p><p>	3.修改\r\n</p><p>		update&nbsp;表名称&nbsp;set&nbsp;字段=值，字段=值.......where&nbsp;id=num；\r\n</p><p>		update&nbsp;student&nbsp;set&nbsp;stuName=“赵六”，stuAge=20&nbsp;where&nbsp;id=3；（第几条记录）\r\n</p><p>	4.删除\r\n</p><p>		delete&nbsp;from&nbsp;表名称&nbsp;where&nbsp;id=num；\r\n</p><p>		delete&nbsp;from&nbsp;student&nbsp;where&nbsp;id=3;\r\n</p><p>		注意：删除记录后，被删除的记录的位置还在。\r\n</p><p>	5.查询\r\n</p><p>		select&nbsp;字段列表&nbsp;from&nbsp;表名称[where条件][order&nbsp;by字段&nbsp;asc|desc][limit&nbsp;起始位置，长度][group&nbsp;by&nbsp;字段名称（分组）]\r\n</p><p>		1》select&nbsp;字段列表&nbsp;from&nbsp;表名称\r\n</p><p>			select&nbsp;stuNum，stuName&nbsp;from&nbsp;student；\r\n</p><p>			注意：可以给字段名称起别名：\r\n</p><p>				selectstuNum&nbsp;as&nbsp;stn，stuName&nbsp;as&nbsp;sn&nbsp;from&nbsp;student&nbsp;as&nbsp;sd；\r\n</p><p>			查找所有字段：\r\n</p><p>			select&nbsp;*from&nbsp;student；\r\n</p><p>		2》order&nbsp;by&nbsp;排序&nbsp;asc升序&nbsp;&nbsp;desc倒序\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;student&nbsp;order&nbsp;by&nbsp;id&nbsp;desc;\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;student&nbsp;order&nbsp;by&nbsp;id&nbsp;asc;\r\n</p><p>		3》limit&nbsp;截取记录&nbsp;起始位置,长度(从0开始)\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;student&nbsp;limit&nbsp;1,3;\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;student&nbsp;limit&nbsp;4,4;\r\n</p><p>			倒序截取记录\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;studet&nbsp;order&nbsp;by&nbsp;id&nbsp;limit&nbsp;0,4;\r\n</p><p>				limit常用于分页。\r\n</p><p>		4》group&nbsp;by&nbsp;分组\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;books&nbsp;group&nbsp;by&nbsp;bTypeId;按照类型id分组；\r\n</p><p>			分组以后，每组中的记录都会取1条；\r\n</p><p>		5》where&nbsp;条件\r\n</p><p>			比较符号：&nbsp;&gt;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&gt;=&nbsp;&nbsp;=&nbsp;&nbsp;&lt;&gt;\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;bid=100;&nbsp;字段和值进行比较\r\n</p><p>			逻辑运算：and&nbsp;or\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;bid&gt;100&nbsp;and&nbsp;bid&lt;110;\r\n</p><p>			模糊搜索：字符串中含有某个关键词，就能找到\r\n</p><p>				like&nbsp;\"%关键词%\"&nbsp;&nbsp;&nbsp;%表示任意字符串&nbsp;&nbsp;_标志任意一个字符\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;bName&nbsp;like&nbsp;\"%网%\";\r\n</p><p>			范围搜索：\r\n</p><p>				1.连续范围\r\n</p><p>					between.....and&nbsp;&nbsp;&nbsp;&nbsp;[not]between....and&nbsp;搜索不在这个范围里的记录\r\n</p><p>					select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;bid&nbsp;between&nbsp;100&nbsp;and&nbsp;110;\r\n</p><p>						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;同等于bid&gt;=100&nbsp;and&nbsp;bid&lt;=110\r\n</p><p>				2.不连续范围\r\n</p><p>					in()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[not]in()&nbsp;搜索不等于这些值的记录\r\n</p><p>						select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;bid&nbsp;in(100,103,105,108);\r\n</p><p>								同等于bid=100&nbsp;or&nbsp;bid=103&nbsp;or&nbsp;bid=105&nbsp;or&nbsp;bid=108;\r\n</p><p>		6》子查询\r\n</p><p>			select&nbsp;语句中的条件又出现了查询语句\r\n</p><p>			查询类型是“网站”的所有图书\r\n</p><p>			select&nbsp;*&nbsp;from&nbsp;books&nbsp;where&nbsp;btypeid=(select&nbsp;btypeid&nbsp;from&nbsp;btype&nbsp;where&nbsp;btypename=\"网站\");\r\n</p><p>			主表：需要显示出来要查询的数据的表\r\n</p><p>			从表：需要辅助显示出要查询的数据的表\r\n</p><p>			效率低。\r\n</p><p>		7》连接查询：通过多张表的共有字段，查找多张表构成的并集。\r\n</p><p>		&nbsp;&nbsp;&nbsp;2张表以上\r\n</p><p>			内连接：共同字段相等。两张表的地位相等。\r\n</p><p>			&nbsp;&nbsp;select&nbsp;*&nbsp;from&nbsp;表1,表2&nbsp;where&nbsp;表1.共有字段=表2.共有字段\r\n</p><p>			&nbsp;&nbsp;select&nbsp;*&nbsp;from&nbsp;books&nbsp;as&nbsp;bs.btype&nbsp;as&nbsp;bt&nbsp;where&nbsp;bs.btypeid=bt.btypeid\r\n</p><p>			&nbsp;&nbsp;主义：内连接中，共有字段中的值，必须两张表都有，才能找到。\r\n</p><p>			外连接：表分主从，主表中的数据全部展示，从表中的数据有和主表中对应的数据便展示，没有则不展示\r\n</p><p>			left&nbsp;join：\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;主表&nbsp;left&nbsp;join&nbsp;从表&nbsp;on&nbsp;主表.共有字段=从表.共有字段[where&nbsp;其他条件];\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;books&nbsp;as&nbsp;bs&nbsp;left&nbsp;join&nbsp;btype&nbsp;as&nbsp;bt&nbsp;on&nbsp;bs.btypeid=bt.btypeid;\r\n</p><p>			right&nbsp;join:\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;从表&nbsp;right&nbsp;join&nbsp;主表&nbsp;on&nbsp;主表.共有字段=从表.共有字段[where&nbsp;其他条件];\r\n</p><p>				select&nbsp;*&nbsp;from&nbsp;btype&nbsp;as&nbsp;bt&nbsp;right&nbsp;join&nbsp;books&nbsp;as&nbsp;bs&nbsp;on&nbsp;bs.btypeid=bt.btypeid;</p><p><br></p>', 1, '?cat=2&id=18', 2, 1530281743, 1530281743),
(19, 4, 'mysql聚合函数：mysql提供的系统实现特定功能的函数', '            <p>1&nbsp;算数函数\r\n</p><p>&nbsp;&nbsp;sum()求和&nbsp;select&nbsp;sum(btypeid)&nbsp;from&nbsp;books;\r\n</p><p>&nbsp;&nbsp;avg()求平均值&nbsp;select&nbsp;avg(btypid)&nbsp;from&nbsp;books;\r\n</p><p>&nbsp;&nbsp;count()统计记录数&nbsp;select&nbsp;count(*)&nbsp;from&nbsp;books;&nbsp;&nbsp;&nbsp;&nbsp;比较常用\r\n</p><p>2&nbsp;字符串\r\n</p><p>&nbsp;&nbsp;concat(str1,str2,str3.....);把字符串连起来\r\n</p><p>	select&nbsp;concat(bName,bTypeid)&nbsp;as&nbsp;p&nbsp;from&nbsp;books;\r\n</p><p>一般情况下很少在mysql语句上使用函数，会加重mysql负担，减少效率。</p><p><br></p>', 1, '?cat=2&id=19', 2, 1530281776, 1530281776);
INSERT INTO `blog_article` (`id`, `order`, `title`, `content`, `recommend`, `title_url`, `cat_id`, `create_time`, `update_time`) VALUES
(20, 5, 'mysql中的索引', '            <p>索引：类似于查询目录，索引是以文件的形式存储的。\r\n</p><p>&nbsp;&nbsp;&nbsp;特点：数据的更新和索引的更新是同步的。\r\n</p><p>&nbsp;&nbsp;&nbsp;作用：提高查询效率。\r\n</p><p>&nbsp;&nbsp;&nbsp;索引的类型：\r\n</p><p>	主索引：\r\n</p><p>	&nbsp;&nbsp;&nbsp;primary&nbsp;key&nbsp;&nbsp;主键&nbsp;&nbsp;&nbsp;确定唯一记录的。&nbsp;where&nbsp;id=？？\r\n</p><p>		id&nbsp;int&nbsp;auto&nbsp;increment&nbsp;primary&nbsp;key;\r\n</p><p>	普通索引：\r\n</p><p>	&nbsp;&nbsp;&nbsp;最基本的索引，可以加在多列上\r\n</p><p>		创建表的时候添加：\r\n</p><p>		&nbsp;&nbsp;&nbsp;create&nbsp;table&nbsp;sdtudent(\r\n</p><p>			id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>			stuNum&nbsp;var(20),\r\n</p><p>			stuName&nbsp;var(20),\r\n</p><p>			stuAge&nbsp;var(20),\r\n</p><p>			stuSex&nbsp;var(20),\r\n</p><p>			stuTel&nbsp;var(20),\r\n</p><p>			key&nbsp;索引名称（字段）\r\n</p><p>			);\r\n</p><p>			create&nbsp;table&nbsp;users(\r\n</p><p>				id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>				name&nbsp;varchar(20),\r\n</p><p>				pwd&nbsp;varchar(20),\r\n</p><p>				key&nbsp;dt(name),\r\n</p><p>				key&nbsp;dp(pwd)\r\n</p><p>			);\r\n</p><p>		对已有的表添加：\r\n</p><p>			alter&nbsp;table&nbsp;表名称&nbsp;add&nbsp;index&nbsp;索引名称(字段)\r\n</p><p>			alter&nbsp;table&nbsp;student&nbsp;add&nbsp;index&nbsp;ts(stuNum);\r\n</p><p>			alter&nbsp;table&nbsp;sutdent&nbsp;add&nbsp;index&nbsp;ts1(stuName);	\r\n</p><p>	唯一索引：\r\n</p><p>	&nbsp;&nbsp;&nbsp;唯一索引可以加在多列上，列上加了唯一索引该列值不能重复\r\n</p><p>		创建表：\r\n</p><p>			create&nbsp;table&nbsp;studen(\r\n</p><p>				id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>				stuNum&nbsp;var(20),\r\n</p><p>				stuName&nbsp;var(20),\r\n</p><p>				stuAge&nbsp;var(20),\r\n</p><p>				stuSex&nbsp;var(20),\r\n</p><p>				stuTel&nbsp;var(20),\r\n</p><p>				unique&nbsp;key&nbsp;索引名称（字段）\r\n</p><p>			)\r\n</p><p>		修改表：\r\n</p><p>		&nbsp;&nbsp;&nbsp;alter&nbsp;table&nbsp;表名称&nbsp;add&nbsp;unique&nbsp;索引名称(字段);\r\n</p><p>	全文索引：加在有大段字符串的文本上。\r\n</p><p>		创建表:\r\n</p><p>			create&nbsp;table&nbsp;studen(\r\n</p><p>				id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>				stuNum&nbsp;var(20),\r\n</p><p>				stuName&nbsp;var(20),\r\n</p><p>				stuAge&nbsp;var(20),\r\n</p><p>				stuSex&nbsp;var(20),\r\n</p><p>				stuTel&nbsp;var(20),\r\n</p><p>				fulltext&nbsp;key&nbsp;索引名称（字段）\r\n</p><p>			)\r\n</p><p>		修改表：\r\n</p><p>			alter&nbsp;table&nbsp;表名称&nbsp;add&nbsp;fulltext&nbsp;索引名称(字段名称);\r\n</p><p>			目前不支持中文\r\n</p><p>注意：索引添加顺序\r\n</p><p>&nbsp;&nbsp;&nbsp;主索引\r\n</p><p>&nbsp;&nbsp;&nbsp;唯一索引\r\n</p><p>&nbsp;&nbsp;&nbsp;普通索引\r\n</p><p>&nbsp;&nbsp;&nbsp;全文索引\r\n</p><p>&nbsp;&nbsp;&nbsp;索引的缺点：\r\n</p><p>	数据索引同步更新，全有索引，会降低效率。\r\n</p><p>	索引是以文件的形式存储的，索引过多，索引文件会很大，会占磁盘空间。\r\n</p><p>	一般&nbsp;用户名&nbsp;手机&nbsp;性别&nbsp;商品名称&nbsp;价格&nbsp;供应商&nbsp;都是要加索引的。</p><p><br></p>', 1, '?cat=2&id=20', 2, 1530281802, 1530281802),
(21, 6, 'mysql外键', '            <p>1。什么是外键\r\n</p><p>	表与表之间的特定关系，保持了数据的完整性和一致性。\r\n</p><p>	user用户\r\n</p><p>	order订单\r\n</p><p>	1》删除用户，没有删除订单，数据就不一致\r\n</p><p>	2》order表中插入记录\r\n</p><p>	外键控制：让用户不更新数据，或者是用户删除数据的时候，让订单也同步删除。\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2。外键特点：\r\n</p><p>	1》innodb类型&nbsp;&nbsp;&nbsp;&nbsp;查看类型方法：show&nbsp;create&nbsp;table&nbsp;表名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存储引擎engine=值（innodb）\r\n</p><p>	2》外键是两张表的约束关系。\r\n</p><p>	3》外键的名称唯一。\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3。创建外键：\r\n</p><p>	create&nbsp;table&nbsp;表名（\r\n</p><p>		列定义\r\n</p><p>		索引定义\r\n</p><p>		外键定义：[constraint&nbsp;约束名称]&nbsp;foreign&nbsp;key&nbsp;外键名称（外键字段）&nbsp;\r\n</p><p>			&nbsp;&nbsp;&nbsp;references&nbsp;[外键名称]（外键字段）\r\n</p><p>			&nbsp;&nbsp;&nbsp;[on&nbsp;delete&nbsp;{restrict|cascade|set&nbsp;null|no&nbsp;action}]\r\n</p><p>			&nbsp;&nbsp;&nbsp;[on&nbsp;update&nbsp;{restrict|cascade|set&nbsp;null|no&nbsp;action}]\r\n</p><p>	）\r\n</p><p>	restrict:拒绝对父表的删除或更新操作\r\n</p><p>	cascade:父表的删除或更新，自动删除或更新子表中对应的记录\r\n</p><p>	set&nbsp;null:父表删除更新，设置子表外键字段为null值\r\n</p><p>	no&nbsp;action:不作为\r\n</p><p>&nbsp;&nbsp;&nbsp;4。例子：\r\n</p><p>	create&nbsp;table&nbsp;user(\r\n</p><p>		id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>		name&nbsp;varchar(30),\r\n</p><p>		sex&nbsp;enum(\"1\",\"2\")\r\n</p><p>	)engine=innodb;\r\n</p><p>	insert&nbsp;into&nbsp;user(name,sex)&nbsp;values(\"zhangsan\",1);\r\n</p><p>	insert&nbsp;into&nbsp;user(name,sex)&nbsp;values(\"lisi\",2);\r\n</p><p>	insert&nbsp;into&nbsp;user(name,sex)&nbsp;values(\"wangwu\",1);\r\n</p><p>	create&nbsp;table&nbsp;orders(\r\n</p><p>		order_id&nbsp;int(6)&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n</p><p>		u_id&nbsp;int(6),\r\n</p><p>		username&nbsp;varchar(30),\r\n</p><p>		money&nbsp;int(6),\r\n</p><p>		datetime&nbsp;date,\r\n</p><p>		key&nbsp;ud(u_id),\r\n</p><p>		foreign&nbsp;key&nbsp;order_f_key&nbsp;(u_id)&nbsp;references&nbsp;user(id)\r\n</p><p>	)engine=innodb;\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(1,\"zhangsan\",300,\"2017-03-03\");\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(1,\"zhangsan\",520,\"2017-05-08\");\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(2,\"lisi\",600,\"2017-011-03\");\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(2,\"lisi\",850,\"2017-08-03\");\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(3,\"wangwu\",2000,\"2017-03-03\");\r\n</p><p>	insert&nbsp;into&nbsp;orders(u_id,username,money,datetime)&nbsp;values(3,\"wangwu\",2550,\"2017-03-03\");\r\n</p><p>&nbsp;&nbsp;&nbsp;5。通过修改表来改变外键的属性\r\n</p><p>	alter&nbsp;table&nbsp;表名称&nbsp;add&nbsp;foreign&nbsp;key&nbsp;外键名称(外键字段)&nbsp;references&nbsp;主表(字段)&nbsp;on&nbsp;delete/on&nbsp;update&nbsp;casecade\r\n</p><p>	alter&nbsp;table&nbsp;orders&nbsp;add&nbsp;foreign&nbsp;key&nbsp;(u_id)&nbsp;references&nbsp;user(id)&nbsp;on&nbsp;delete&nbsp;cascade;\r\n</p><p>&nbsp;&nbsp;&nbsp;6。删除外键\r\n</p><p></p><p>&nbsp;alter&nbsp;table&nbsp;表名称&nbsp;drop&nbsp;foreign&nbsp;key&nbsp;外键名称\r\n</p><p><br></p>', 1, '?cat=2&id=21', 2, 1530281833, 1530281833),
(22, 7, 'mysql函数库', '            <p>php的函数，php中用来操作mysql数据库的函数。\r\n</p><p>&nbsp;&nbsp;&nbsp;1&nbsp;常用函数：\r\n</p><p>	1》mysql_connect(\"主机名称/ip\",\"用户名\",\"密码\")&nbsp;&nbsp;&nbsp;&nbsp;建立php和mysql连接&nbsp;&nbsp;&nbsp;返回资源\r\n</p><p>	2》mysql_error();返回上一个mysql操作的文本错误信息。\r\n</p><p>		$link=@mysql_connect(\"localhost\",\"root\",\"123\")&nbsp;or&nbsp;die(\"连接错误\".mysql_error());\r\n</p><p>		连接成功&nbsp;&nbsp;&nbsp;die()输出()中内容，终止后边程序。\r\n</p><p>		@：错误抑制符号,隐藏错误信息。\r\n</p><p>		mysql_errno();如果连接数据库失败则返回ture，否则返回false。\r\n</p><p>	3》mysql_select_db(\"数据库名称\",$link);&nbsp;===use&nbsp;数据库名称\r\n</p><p>	4》mysql_query();向数据库发送一条命令。返回资源\r\n</p><p>	5》mysql_affected_rows();取得前一条sql语句&nbsp;返回受影响的行数。主要作用于insert&nbsp;update&nbsp;delete\r\n</p><p>	6》mysql_close($link);关闭数据库连接\r\n</p><p>	7》mysql_fetch_array(结果集，参数2);从结果集中返回一条记录（默认为混合数组）\r\n</p><p>		参数2可选值：\r\n</p><p>			MYSQL_ASSOC:抽取为关联数组\r\n</p><p>			MYSQL_NUM:抽取为索引数组\r\n</p><p>			MYSQL_BOTH:抽取为混合数组\r\n</p><p>	8》mysql_fetch_assoc($result);==&gt;mysql_fetch_array($result,MYSQL_ASSOC)抽取为关联数组\r\n</p><p>	9》mysql_fetch_row($result);抽取为索引数组\r\n</p><p>	10》mysql_num_rows();获取select语句执行后的结果集中的记录条数的。</p><p><br></p>', 1, '?cat=2&id=22', 2, 1530281857, 1530281857),
(23, 1, 'DOM操作', '            <p>a.操作属性\r\n</p><p>	b.操作内容\r\n</p><p>		取html标签里面的文本内容：\r\n</p><p>		innerText=\"asdfsadf\";(ie)\r\n</p><p>		textContent=\"asdfasdf\";(firefox)\r\n</p><p>		取html标签里面的文本内容(带样式)：\r\n</p><p>		innerHTML=\"&lt;b&gt;asdf&lt;/b&gt;\";\r\n</p><p>		判断是ie还是火狐浏览器\r\n</p><p>		if(docunment.all)\r\n</p><p>		如果是true则是ie浏览器，反之是火狐浏览器\r\n</p><p>	c.操作样式\r\n</p><p>		1.document.style.xx\r\n</p><p>		获取样式表里面的属性：\r\n</p><p>		宽度：\r\n</p><p>		aobj=getElementById(\'a\');\r\n</p><p>		alert(aobj.offsetWidth);\r\n</p><p>		高度：\r\n</p><p>		aobj=getElementById(\'a\');\r\n</p><p>		alert(aobj.offsetHeight);\r\n</p><p>		2.className</p><p><br></p>', 1, '?cat=3&id=23', 3, 1530282042, 1530282042),
(24, 2, '数据类型', '            <p>number&nbsp;string&nbsp;object&nbsp;boolean&nbsp;undefined&nbsp;function\r\n</p><p>	强制类型转换:\r\n</p><p>		parseInt();转换为int类型\r\n</p><p>		parseFloat();转换为float类型\r\n</p><p>		var&nbsp;a=parseInt(\'asdf\');//不包含数字的字符串，显示NaN，如果是12a54，则a的值是12\r\n</p><p>		alert(a);\r\n</p><p>		弹出对话框，显示NaN&nbsp;&nbsp;&nbsp;&nbsp;//NaN:&nbsp;&nbsp;&nbsp;Not&nbsp;a&nbsp;Number&nbsp;非数字\r\n</p><p>		NaN不等于NaN\r\n</p><p>		var&nbsp;a=parseInt(\'asdf\');\r\n</p><p>		var&nbsp;b=parseInt(\'jdfkjf\');\r\n</p><p>		alert(a==b);\r\n</p><p>		结果为false\r\n</p><p>		isNaN()函数:判断括号里的值是不是NaN，是的话返回true，否则返回false\r\n</p><p>		例子：\r\n</p><p>			var&nbsp;a=parseInt(\'asdf\');\r\n</p><p>			alert(isNaN(a));\r\n</p><p>			结果为true\r\n</p><p>	自动类型转换：\r\n</p><p>		==和===的区别\r\n</p><p>		==：先转换类型，然后比较\r\n</p><p>		===：不转换类型，直接比较(全等符)\r\n</p><p>		var&nbsp;a=6;\r\n</p><p>		var&nbsp;b=\'6\';\r\n</p><p>		alert(a==b);\r\n</p><p>		alert(a===b);\r\n</p><p>		结果为先弹出true，然后弹出false\r\n</p><p>	闭包：子函数可以使用父函数的局部变量</p><p><br></p>', 1, '?cat=3&id=24', 3, 1530282100, 1530282100),
(25, 3, 'json', '            <p>跟数组差不多\r\n</p><p>	例：\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;定义：var&nbsp;json={a:&nbsp;43,b:&nbsp;4,c:&nbsp;\'asdf\'};\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;引用：json.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json.b&nbsp;&nbsp;&nbsp;json.c&nbsp;&nbsp;&nbsp;&nbsp;json[\'a\']&nbsp;&nbsp;&nbsp;json[\'b\']&nbsp;&nbsp;&nbsp;json[\'c\']\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;json里面没有length属性\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;json里面的遍历是使用for&nbsp;in&nbsp;循环\r\n</p><p>	&nbsp;&nbsp;&nbsp;&nbsp;例子：\r\n</p><p>		var&nbsp;json=[a:&nbsp;34,b:&nbsp;767,c:&nbsp;\'jgjg\'];\r\n</p><p>		for(var&nbsp;i&nbsp;in&nbsp;json){\r\n</p><p>			alert(json[i]);\r\n</p><p>		}</p><p><br></p>', 1, '?cat=3&id=25', 3, 1530282133, 1530282133),
(26, 4, 'for in  循环', '            <p>数组也可以用\r\n</p><p>	例子：\r\n</p><p>		var&nbsp;arr=[1,3,5,6,36];\r\n</p><p>		for(var&nbsp;i&nbsp;in&nbsp;arr){\r\n</p><p>			alert(arr[i]);\r\n</p><p>		}</p><p><br></p>', 1, '?cat=3&id=26', 3, 1530282159, 1530282159),
(27, 5, '函数传参（不定参）', '            <p>arguments：它是一个数组，里面存放的是函数的参数；\r\n</p><p>	例子：求和函数\r\n</p><p>		function&nbsp;sum(){\r\n</p><p>			var&nbsp;result;\r\n</p><p>			for(var&nbsp;i=0;i&lt;arguments.length;i++){\r\n</p><p>				result+=arguments[i];\r\n</p><p>			}\r\n</p><p>			return(result);\r\n</p><p>		}\r\n</p><p>		alert(sum(2,5,48));//随便输入多少个参数都可以求出和来</p><p><br></p>', 1, '?cat=3&id=27', 3, 1530282184, 1530282184),
(28, 6, '获取非行间样式', '            <p>currentStyle（只有IE兼容，firefox和chrome都不兼容）\r\n</p><p>	例子：\r\n</p><p>	&lt;style&nbsp;type=\"text/css\"&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#div1&nbsp;{width:200px;&nbsp;height:200px;&nbsp;background:red;}\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/style&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&nbsp;type=\"text/javascript\"&gt;\r\n</p><p>			window.onload=function&nbsp;()\r\n</p><p>			{\r\n</p><p>				var&nbsp;oDiv=document.getElementById(\'div1\');\r\n</p><p>				alert(oDiv.currentStyle.width);\r\n</p><p>			}\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n</p><p>	&lt;body&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&lt;div&nbsp;id=\"div1\"&gt;&lt;/div&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;	&lt;/body&gt;\r\n</p><p>	getComputedStyle(对象名,参数2);(firefox和chrome兼容,IE9以上支持,IE7不支持)\r\n</p><p>	注意：参数2可以随意填，不影响结果。\r\n</p><p>	例子：\r\n</p><p>		在上面例子的基础上将alert语句替换为alert(getComputedStyle(oDiv,false));\r\n</p><p>	要想使得所有浏览器兼容，则使用以下写法：\r\n</p><p>		在火狐和chrome里面currentStyle的值是假，在IE里是真,所以这里用if做一个判断，解决兼容性问题\r\n</p><p>		if(oDiv.currentStyle)\r\n</p><p>		{\r\n</p><p>			//IE\r\n</p><p>			alert(oDiv.currentStyle.width);\r\n</p><p>		}\r\n</p><p>		else\r\n</p><p>		{\r\n</p><p>			//FireFox&nbsp;&nbsp;chrome\r\n</p><p>			alert(getComputedStyle(oDiv,false).width);\r\n</p><p>		}\r\n</p><p>	注意：\r\n</p><p>		&lt;1&gt;为方便使用，此种方法一般是封装为函数\r\n</p><p>		&lt;2&gt;这两个取非行间样式的方法都不能直接取复合样式\r\n</p><p>			a.复合样式：由多种样式组成\r\n</p><p>				例：background、border..\r\n</p><p>				background里面含有backgroundColor、backgroundImage等属性\r\n</p><p>				border里面含有border-style、border-width等属性\r\n</p><p>			b.单一样式\r\n</p><p>				例：width,height,color,backgroundColor...</p><p><br></p>', 1, '?cat=3&id=28', 3, 1530282215, 1530282215),
(29, 7, '数组', '            <p>a.定义\r\n</p><p>		&lt;1&gt;var&nbsp;a=[1,2,3];\r\n</p><p>		&lt;2&gt;var&nbsp;a=Array(1,2,3);\r\n</p><p>	b.length属性\r\n</p><p>		length的值可以获取，也可以设置\r\n</p><p>		例子：\r\n</p><p>			var&nbsp;arr=[1,2,3,4,5,6];\r\n</p><p>			arr.length=3;\r\n</p><p>			alert(arr);\r\n</p><p>		输出1,2,3\r\n</p><p>		此种属性常用作快速清空数组\r\n</p><p>	c.数组的添加、删除\r\n</p><p>		添加：\r\n</p><p>			push（元素）;在数组的尾部添加一个元素&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//aaa.push(1);\r\n</p><p>			unshift(元素);在数组的头部添加一个元素&nbsp;&nbsp;&nbsp;&nbsp;//bbb.unshift(\'asdf\');\r\n</p><p>		删除：\r\n</p><p>			pop();在数组的尾部删除一个元素\r\n</p><p>			shift();在数组的头部删除一个元素\r\n</p><p>	d.splice的用法\r\n</p><p>		删除：splice(起点，长度)\r\n</p><p>		添加：splice（起点，0，元素1,元素2，元素3...）\r\n</p><p>			arr.splice();\r\n</p><p>	e.数组连接函数\r\n</p><p>		concat()函数\r\n</p><p>		例子：\r\n</p><p>		var&nbsp;a=[1,2,3];\r\n</p><p>		var&nbsp;b=[4,5,6];\r\n</p><p>		alert(a.concat(b));//输出1,2,3,4,5,6\r\n</p><p>		alert(b.concat(a));//输出4,5,6,1,2,3\r\n</p><p>	f.设置数组的分隔符\r\n</p><p>		join()函数\r\n</p><p>		var&nbsp;arr=[1,2,3,4];\r\n</p><p>		alert(arr.join(\'-\'));//输出1-2-3-4\r\n</p><p>	g.数组排序\r\n</p><p>		sort()函数\r\n</p><p>		给字符串排序：\r\n</p><p>		例子：\r\n</p><p>			var&nbsp;arr=[\'width\',\'height\',\'alpha\',\'zoom\'];\r\n</p><p>			arr.sort();\r\n</p><p>			alert(arr);\r\n</p><p>			//输出alpha,height,width,zoom&nbsp;&nbsp;&nbsp;(按字母前后顺序排列)\r\n</p><p>		给数字排序：\r\n</p><p>			var&nbsp;arr[12,8,99,36];\r\n</p><p>			arr.sort(function&nbsp;(n1,n2){\r\n</p><p>				return&nbsp;n1-n2;\r\n</p><p>			});\r\n</p><p>			alert(arr);\r\n</p><p>			//输出8,12,36,99&nbsp;&nbsp;升序排列</p><p><br></p>', 1, '?cat=3&id=29', 3, 1530282240, 1530282240),
(30, 8, '定时器', '            <p>开启定时器\r\n</p><p>		setInterval(函数名，毫秒)&nbsp;间隔型&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p><p>		例子：setInterval(show,1000)//每隔1000毫秒执行一次show函数，执行多次\r\n</p><p>		setTimeout(函数名，毫秒)&nbsp;延时型\r\n</p><p>		例子:setTimeout(show,1000)//延时1秒后执行show函数，只执行一次\r\n</p><p>	关闭定时器\r\n</p><p>		clearInterval();\r\n</p><p>		clearTimeout();\r\n</p><p>		例子：\r\n</p><p>			oBtn1=document.getElementById(\'btn1\');\r\n</p><p>			oBtn2=document.getElementById(\'btn2\');\r\n</p><p>			var&nbsp;timer;\r\n</p><p>			function&nbsp;show()\r\n</p><p>			{\r\n</p><p>				alert(\'a\');\r\n</p><p>			}\r\n</p><p>			oBtn1.onclick=function&nbsp;()\r\n</p><p>			{\r\n</p><p>				timer=setInterval(show,1000);\r\n</p><p>			}\r\n</p><p>			oBtn2.onclick=function&nbsp;()\r\n</p><p>			{\r\n</p><p>				clearInterval(timer);\r\n</p><p>			}</p><p><br></p>', 1, '?cat=3&id=30', 3, 1530282263, 1530282263),
(31, 9, '获取日期时间', '            <p>Date对象\r\n</p><p>	例子：\r\n</p><p>		var&nbsp;oDate=new&nbsp;Date();\r\n</p><p>		alert(oDate.getFullYear());//获取当前年份\r\n</p><p>		alert(oDate.getMonth()+1);//获取当前月份&nbsp;&nbsp;&nbsp;因为计算机是从0开始计算的，所以要+1\r\n</p><p>		alert(oDate.getDate());//获取当前日\r\n</p><p>		alert(oDate.getDay());//获取当前星期几&nbsp;&nbsp;&nbsp;&nbsp;0,1,2,3,4,5,6&nbsp;&nbsp;&nbsp;0代表周日，其他正常\r\n</p><p>		alert(oDate.getHourse());//获取当前时间小时数\r\n</p><p>		alert(oDate.getMinutes());//获取当前时间分数\r\n</p><p>		alert(oDate.getSeconds());//获取当前时间秒数\r\n</p><p>		charAt用法：\r\n</p><p>		var&nbsp;str=[1,2,3];\r\n</p><p>		str[i]和str.charAt(i)是一样的作用&nbsp;&nbsp;&nbsp;&nbsp;主要用来解决兼容性</p><p><br></p>', 1, '?cat=3&id=31', 3, 1530282287, 1530282287),
(32, 10, '运动基础', '            <p>offsetLeft\r\n</p><p>	offsetTop\r\n</p><p>	offsetWidth\r\n</p><p>	offsetHeight\r\n</p><p>	例子：\r\n</p><p>		setInterval(function&nbsp;(){\r\n</p><p>			var&nbsp;oDiv=document.getElementById(\'div1\');\r\n</p><p>			oDiv.style.left=oDiv.offsetLeft+10+\'px\';\r\n</p><p>		},30);</p><p><br></p>', 1, '?cat=3&id=32', 3, 1530282314, 1530282314),
(33, 11, '节点', '            <p>a.子节点&nbsp;childNodes\r\n</p><p>	例:&lt;ul&nbsp;id=\'ul1\'&gt;\r\n</p><p>		&lt;li&gt;&lt;/li&gt;\r\n</p><p>	&nbsp;&nbsp;&nbsp;&lt;/ul&gt;\r\n</p><p>	因为兼容性问题，在chrome里面的结果如下（在ie6-8里面节点数为1）：\r\n</p><p>	ul的子节点数为3,第一个是li标记前面的空白部分(文本节点)，第二个是li标记本身(元素节点),第三个是li标记后面的空白部分\r\n</p><p>	注意：子节点只算外层子节点数量\r\n</p><p>		如：\r\n</p><p>			&lt;ul&nbsp;id=\'ul1\'&gt;\r\n</p><p>				&lt;li&gt;3546546&lt;span&gt;32464&lt;/span&gt;&lt;/li&gt;\r\n</p><p>	&nbsp;&nbsp;&nbsp;		&lt;/ul&gt;\r\n</p><p>		此程序的ul子节点数还是为3\r\n</p><p>	b.nodeType的用法\r\n</p><p>	在js里面的每一个元素（包括文本，ul，li等）都有一个nodeType\r\n</p><p>	当nodeType==1时，证明该节点为元素节点\r\n</p><p>	当nodeType==3时，证明该节点为文本节点\r\n</p><p>	在a小节的代码基础上，运用nodeType修改li的背景颜色实例：\r\n</p><p>	var&nbsp;oUl=document.getElementById(\'ul1\');\r\n</p><p>	//alert(oUl.childNodes.length;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childNodes&nbsp;是一个存放子节点的数组\r\n</p><p>	for(var&nbsp;i=0;i&lt;oUl.childNodes.length;i++)\r\n</p><p>	{\r\n</p><p>		//nodeType==1&nbsp;&nbsp;&nbsp;元素节点\r\n</p><p>		//nodeType==3&nbsp;&nbsp;&nbsp;文本节点\r\n</p><p>		//alert(oUl.childNodes[i].nodeType);&nbsp;&nbsp;&nbsp;结果为&nbsp;依次弹出&nbsp;3&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;3\r\n</p><p>		if(oUl.childNodes[i].nodeType==1)\r\n</p><p>		{\r\n</p><p>			oUl.childNodes[i].style.background=\'red\';\r\n</p><p>		}\r\n</p><p>	}\r\n</p><p>	c.children的用法\r\n</p><p>		与childNodes相似，但children只包含元素节点\r\n</p><p>		运用childern属性修改li的背景颜色实例：\r\n</p><p>		var&nbsp;oUl=document.getElementById(\'ul1\');\r\n</p><p>		for(var&nbsp;i=0;i&lt;oUl.children.length;i++)\r\n</p><p>		{\r\n</p><p>			oUl.children[i].style.background=\'red\';\r\n</p><p>		}\r\n</p><p>	d.parentNode&nbsp;父节点\r\n</p><p>		获取父节点元素\r\n</p><p>		例子：\r\n</p><p>			var&nbsp;aA=document.getElementsByTagName(\'a\');\r\n</p><p>				for(var&nbsp;i=0;i&lt;aA.length;i++)\r\n</p><p>				{\r\n</p><p>					aA[i].onclick=function&nbsp;()\r\n</p><p>					{\r\n</p><p>						this.parentNode.style.display=\'none\';\r\n</p><p>					}\r\n</p><p>				}\r\n</p><p>			&lt;ul&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;li&gt;3113132133&lt;a&nbsp;href=\"javascript:;\"&gt;隐藏&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;li&gt;624324&lt;a&nbsp;href=\"javascript:;\"&gt;隐藏&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;li&gt;asdfas&lt;a&nbsp;href=\"javascript:;\"&gt;隐藏&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;li&gt;cvbn&lt;a&nbsp;href=\"javascript:;\"&gt;隐藏&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;li&gt;kgjh&lt;a&nbsp;href=\"javascript:;\"&gt;隐藏&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/ul&gt;\r\n</p><p>		offsetParent\r\n</p><p>		获取一个元素用来定位的那个父级元素,会随着元素的样式变化父级元素\r\n</p><p>	e.首尾子节点&nbsp;（有兼容性问题）\r\n</p><p>		firstChild(ie6-8支持)&nbsp;&nbsp;firstElementChild（高级浏览器支持）\r\n</p><p>		lastChild（同上）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElementChild（同上）\r\n</p><p>		解决兼容性问题：\r\n</p><p>		if(oUl.firstElementChild)\r\n</p><p>			oUl.firstElementChild.style.background=\'red\';&nbsp;&nbsp;//高级浏览器\r\n</p><p>		else\r\n</p><p>			oUl.firstChild.style.background=\'red\';&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ie6-8\r\n</p><p>	f.兄弟节点（有兼容性问题）\r\n</p><p>		nextSibling(ie6-8)&nbsp;&nbsp;&nbsp;nextElementSibling(高级浏览器)\r\n</p><p>		previousSibling(同上)previousElementSibling(同上)\r\n</p><p></p><p>&nbsp; 解决兼容性问题：同上&nbsp;\r\n</p><p><br></p>', 1, '?cat=3&id=33', 3, 1530282355, 1530282355),
(34, 12, '操作元素属性', '            <p>a.元素属性操作\r\n</p><p>		&lt;1&gt;oDiv.style.display=\'none\';\r\n</p><p>		&lt;2&gt;oDiv.style[\"display\"]=\'none\';\r\n</p><p>		&lt;3&gt;Dom方式\r\n</p><p>			获取：getAttribute(名称)\r\n</p><p>			设置：setAttribute(名称，值)\r\n</p><p>			删除：removeAttribute(名称)\r\n</p><p>			例：oTxt.setAttribute(\'value\',\'asdfasdf\');\r\n</p><p>	b.className选择元素\r\n</p><p>		封装为函数实例：\r\n</p><p>		function&nbsp;getByClass(oParent,sClass)\r\n</p><p>		{\r\n</p><p>			var&nbsp;aResult=[];\r\n</p><p>			var&nbsp;aEle=oParent.getElementsByTagName(\'*\');\r\n</p><p>			for(var&nbsp;i=0;i&lt;aEle.length;i++)\r\n</p><p>			{\r\n</p><p>				if(aEle[i].className==sClass)\r\n</p><p>				{\r\n</p><p>					aResult.push(aEle[i]);\r\n</p><p>				}\r\n</p><p>			}\r\n</p><p>			return&nbsp;aResult;\r\n</p><p>		}\r\n</p><p>		window.onload=function&nbsp;()\r\n</p><p>		{\r\n</p><p>			var&nbsp;oUl=document.getElementById(\'ul1\');\r\n</p><p>			var&nbsp;oBox=getByClass(oUl,box);\r\n</p><p>			for(var&nbsp;i=0;i&lt;oBox.length;i++)\r\n</p><p>			{\r\n</p><p>				oBox[i].style.background=\'red\';\r\n</p><p>			}\r\n</p><p>		}\r\n</p><p>		&lt;ul&gt;\r\n</p><p>			&lt;li&nbsp;class=\'box\'&gt;&lt;/li&gt;\r\n</p><p>			&lt;li&gt;&lt;/li&gt;\r\n</p><p>			&lt;li&nbsp;class=\'box\'&gt;&lt;/li&gt;\r\n</p><p>			&lt;li&gt;&lt;/li&gt;\r\n</p><p>			&lt;li&gt;&lt;/li&gt;\r\n</p><p>			&lt;li&nbsp;class=\'box\'&gt;&lt;/li&gt;\r\n</p><p>		&lt;/ul&gt;</p><p><br></p>', 1, '?cat=3&id=34', 3, 1530282377, 1530282377),
(35, 13, '创建、插入和删除元素', '            <p>a.创建Dom元素\r\n</p><p>		createElement(标签)&nbsp;&nbsp;&nbsp;例：oUl.createElement(\'li\');\r\n</p><p>		appendChild(节点)&nbsp;&nbsp;&nbsp;把元素添加到指定的父级下，只创建元素不添加的话网页上不会显示\r\n</p><p>		例：\r\n</p><p>				var&nbsp;oUl=document.getElementById(\'ul1\');\r\n</p><p>				var&nbsp;oBtn=document.getElementById(\'btn1\');\r\n</p><p>				var&nbsp;oTxt=document.getElementById(\'txt1\');\r\n</p><p>				oBtn.onclick=function&nbsp;()\r\n</p><p>				{\r\n</p><p>					//创建一个li元素\r\n</p><p>					var&nbsp;oLi=document.createElement(\'li\');\r\n</p><p>					var&nbsp;aLi=oUl.getElementsByTagName(\'li\');\r\n</p><p>					oLi.innerHTML=oTxt.value;\r\n</p><p>					//插入一个子节点&nbsp;&nbsp;&nbsp;引用格式：父级.appendChild(子节点)\r\n</p><p>					//oUl.appendChild(oLi);&nbsp;&nbsp;&nbsp;&nbsp;此种方法是只能插入在末尾的\r\n</p><p>					//下面的方法在第一个li之前插入\r\n</p><p>					if(aLi.length&gt;0)\r\n</p><p>						oUl.insertBefore(oLi,aLi[0]);\r\n</p><p>					else\r\n</p><p>						oUl.appendChild(oLi);\r\n</p><p>				}\r\n</p><p>				&lt;body&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;input&nbsp;id=\"txt1\"&nbsp;type=\"text\"&nbsp;/&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;					&lt;input&nbsp;id=\"btn1\"&nbsp;type=\"button\"&nbsp;value=\"添加\"&nbsp;/&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;ul&nbsp;id=\"ul1\"&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;/ul&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;				&lt;/body&gt;\r\n</p><p>		insertBefore(子节点,在谁之前)&nbsp;&nbsp;&nbsp;：和appendChild功能类似，但是这个是插入在某个元素前面的\r\n</p><p>		removeChild(子节点)&nbsp;&nbsp;：删除某个元素&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;引用格式：父级.removeChild(子节点)\r\n</p><p>		例子：\r\n</p><p>				var&nbsp;oUl=document.getElementById(\'ul1\');\r\n</p><p>				var&nbsp;aA=oUl.getElementsByTagName(\'a\');\r\n</p><p>				for(var&nbsp;i=0;i&lt;aA.length;i++)\r\n</p><p>				{\r\n</p><p>					aA[i].onclick=function&nbsp;()\r\n</p><p>					{\r\n</p><p>						oUl.removeChild(this.parentNode);\r\n</p><p>					}\r\n</p><p>				}\r\n</p><p>				&lt;ul&nbsp;id=\"ul1\"&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;li&gt;1321&lt;a&nbsp;href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;li&gt;asdfasd&lt;a&nbsp;href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;li&gt;xcvb&lt;a&nbsp;href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;li&gt;gfdg&lt;a&nbsp;href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;				&lt;li&gt;yrert&lt;a&nbsp;href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/ul&gt;</p><p><br></p>', 1, '?cat=3&id=35', 3, 1530282401, 1530282401),
(36, 14, '文档碎片', '            <p>document.createDocumentFragment();\r\n</p><p>	相当一个容器，用于插入Dom元素时，先把要插入的Dom元素放入文档碎片中，再一次性写入页面中\r\n</p><p>	例子：\r\n</p><p>	window.onload=function&nbsp;()\r\n</p><p>	{\r\n</p><p>		var&nbsp;oUl=document.getElementById(\'ul1\');	\r\n</p><p>		var&nbsp;oFrag=document.createDocumentFragment();\r\n</p><p>		for(var&nbsp;i=0;i&lt;10000;i++)\r\n</p><p>		{\r\n</p><p>			var&nbsp;oLi=document.createElement(\'li\');\r\n</p><p>			oFrag.appendChild(oLi);\r\n</p><p>		}\r\n</p><p>		oUl.appendChild(oFrag);\r\n</p><p>	};\r\n</p><p>	&lt;body&gt;\r\n</p><p>		&lt;ul&nbsp;id=\"ul1\"&gt;\r\n</p><p>		&lt;/ul&gt;\r\n</p><p>	&lt;/body&gt;</p><p><br></p>', 1, '?cat=3&id=36', 3, 1530282428, 1530282428),
(37, 15, '表格应用', '            <p>tBodies:同等于docunment.getElementByTagName(\'tbody\');把所有的tbody选出来，一个表格里面可以有多个tbody\r\n</p><p>	tHead:同等于docunment.getElementByTagName(\'thead\');把所有的thead选出来\r\n</p><p>	tFoot:同等于docunment.getElementByTagName(\'tfoot\');把所有的tfoot选出来\r\n</p><p>	rows:同等于docunment.getElementByTagName(\'tr\');把所有的行选出来\r\n</p><p>	cells:同等于docunment.getElementByTagName(\'td\');把所有的单元格选出来\r\n</p><p>	例子：表格隔行换色\r\n</p><p>		var&nbsp;oTab=document.getElementById(\'tab1\');\r\n</p><p>		for(var&nbsp;i=0;i&lt;oTab.tBodies[0].rows.length;i++)\r\n</p><p>		{\r\n</p><p>			//鼠标移入当行背景变绿色\r\n</p><p>			var&nbsp;color=null;\r\n</p><p>			oTab.tBodies[0].rows[i].onmouseover=function&nbsp;()\r\n</p><p>			{\r\n</p><p>				color=this.style.background;\r\n</p><p>				this.style.background=\"green\";\r\n</p><p>			}\r\n</p><p>			oTab.tBodies[0].rows[i].onmouseout=function&nbsp;()\r\n</p><p>			{\r\n</p><p>				this.style.background=color;\r\n</p><p>			}\r\n</p><p>			//隔行换色\r\n</p><p>			if(i%2==1)\r\n</p><p>				oTab.tBodies[0].rows[i].style.background=\"#ccc\";\r\n</p><p>			else\r\n</p><p>				oTab.tBodies[0].rows[i].style.background=\"\";\r\n</p><p>		&lt;table&nbsp;id=\"tab1\"&nbsp;border=\"1\"&nbsp;width=\"500\"&nbsp;align=\"center\"&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;thead&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;姓名&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;性别&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;年龄&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/thead&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;tbody&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;张三&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;男&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;23&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;李四&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;女&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;56&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;王五&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;男&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;21&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;王五&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;男&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;21&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;王五&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;男&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;td&gt;21&lt;/td&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			&lt;/tr&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/tbody&gt;\r\n</p><p>&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/table&gt;\r\n</p><p>	表格搜索：\r\n</p><p>		toLowerCase()&nbsp;&nbsp;&nbsp;把所有字母全转换为小写&nbsp;&nbsp;&nbsp;\r\n</p><p>		引用格式：var&nbsp;sTab=oTab.tBodies[0].rows[i].cells[1].innerHTML\r\n</p><p>			&nbsp;&nbsp;var&nbsp;sTxt=oTxt.value;\r\n</p><p>			&nbsp;&nbsp;if(sTab.toLowerCase()==sTxt.toLowerCase())//将两个全转换为小写字母后再进行比较\r\n</p><p>		search():找到并且返回字符串出现的位置，如果没找到则返回-1\r\n</p><p>		引用格式：var&nbsp;str=\'abcdef\';\r\n</p><p>			&nbsp;&nbsp;alert(str.search(\'cd\'));//结果为2\r\n</p><p>		split():分割字符串\r\n</p><p>		引用格式：var&nbsp;str=\'asd&nbsp;fghg&nbsp;123\';\r\n</p><p>			&nbsp;&nbsp;var&nbsp;arr=str.split(\'&nbsp;\');//将str里的字符串用空格分开，存入arr数组\r\n</p><p>			&nbsp;&nbsp;alert(arr);//结果为arr数组里包含三个元素，分别是asd、fghg、123\r\n</p><p>	appendChild深层次理解：1.先把元素从原有父级上删掉&nbsp;&nbsp;2.添加到新的父级上</p><p><br></p>', 1, '?cat=3&id=37', 3, 1530282458, 1530282458),
(38, 16, '运动框架', '            <p>单物体运动框架：\r\n</p><p>		1.在开始运动时，关闭已有定时器\r\n</p><p>		2.把运动和停止隔开(if/else)\r\n</p><p>	多物体运动框架：\r\n</p><p>		单定时器存在问题\r\n</p><p>		1.定时器作为物体的属性\r\n</p><p>		2.参数的传递：物体，目标值\r\n</p><p>		3.所有的东西都不能公用\r\n</p><p>		4.属性与运动对象绑定：速度、其他属性值（如透明度等）\r\n</p><p>	任意值运动框架：\r\n</p><p>		1.多加一个属性参数，使得此框架能让所有的属性改变，变成多功能\r\n</p><p>		2.opacity属性不兼容，用if判断解决\r\n</p><p>		3.小数问题(0.07*100=7.000000001)，用Math.round();//四舍五入</p><p><br></p>', 1, '?cat=3&id=38', 3, 1530282478, 1530282478),
(39, 17, '缓冲运动', '            <p>Math.ceil();向上取整\r\n</p><p>	Math.floor();向下取整\r\n</p><p>	offsetWidth的bug\r\n</p><p>		offsetWidth是把物体的内边距外边距边框都计算了之后得出的宽度，所以当你想要改变物体的宽度的时候使用offsetWidth的时候可能会出现错误，尽量不要用offsetWidth，尽量取样式表里的width，故替换为parseInt(getStyle(obj,\'height\'))&nbsp;//getStyle()在上面有说明</p><p><br></p>', 1, '?cat=3&id=39', 3, 1530282501, 1530282501),
(40, 18, '链式运动框架', '            <p>startMove(oDiv,\'height\',300,function&nbsp;(){\r\n</p><p>		startMove(oDiv,\'width\',300);\r\n</p><p></p><p>&nbsp;})\r\n</p><p><br></p>', 1, '?cat=3&id=40', 3, 1530282524, 1530282524),
(41, 1, '(转CSDN)empty(), is_null(), isset()(区别)', '            <p><strong>1、当变量未定义时，is_null()和“参数本身”是不允许作为参数判断的，会报Notice警告错误；<br><br>2、empty,isset首先都会检查变量是否存在，然后对变量值进行检测。而is_null 和 “参数本身”只是直接检查变量值，是否为null，因此如果变量未定义就会出现错误！</strong></p><p><strong>3、isset()：仅当null和未定义，返回false；</strong></p><p><strong>4、empty()：\"\"、0、\"0\"、NULL、FALSE、array(),未定义，均返回false；</strong></p><p><strong>5、is_null()：仅判断是否为null，未定义 报警告；</strong><strong><br></strong></p><p><strong>6、变量本身作为参数，与empty()一致，但接受未定义变量时，报警告；<br><br><br>\"\"、0、\"0\"、NULL、FALSE、array()这几个中，empty()和“变量本身作为参数”结果一致，均作为“空”来处理，而isset()和is_null ()仅当是null时，才作为“空”来处理（值得注意的是false并不会被认为是空）<br><br><br><br><br>&nbsp;&nbsp;&nbsp; empty()<br><br>&nbsp;&nbsp;&nbsp; 如果 变量 是非空或非零的值，则 empty() 返回 FALSE。换句话说，\"\"、0、\"0\"、NULL、FALSE、array()、var $var、未定义，以及没有任何属性的对象都将被认为是空的，如果 var 为空，则返回 TRUE。<br><br>&nbsp;&nbsp;&nbsp; isset()<br><br>&nbsp;&nbsp;&nbsp; 如果 变量 存在且值非NULL，则返回 TRUE，否则返回 FALSE(包括未定义）。变量值设置为：null，返回也是false；unset一个变量后，变量被取消了。注意，isset对于NULL值变量，特殊处理。<br><br>&nbsp;&nbsp;&nbsp; is_null()<br><br>&nbsp;&nbsp;&nbsp; 检测传入值【值，变量，表达式】是否是null，只有一个变量定义了，且它的值是null，它才返回TRUE . 其它都返回 FALSE 【未定义变量传入后会出错！】。</strong></p><p><br></p>', 1, '?cat=1&id=41', 1, 1530714683, 1530714683);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
